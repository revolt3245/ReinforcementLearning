  main.cpp
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\macros\Macros.h(189,20): warning C4067: 전처리기 지시문 다음에 예기치 않은 토큰이 있습니다. 줄 바꿈 문자가 필요합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Exception.h(28,45): warning C4275: DLL 인터페이스가 아닌 class 'std::exception'이(가) DLL 인터페이스 class 'c10::Error'의 기본으로 사용되었습니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\vcruntime_exception.h(48): message : 'std::exception' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Exception.h(28): message : 'c10::Error' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Exception.h(30,19): warning C4251: 'c10::Error::msg_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'c10::Error'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Exception.h(35,36): warning C4251: 'c10::Error::context_': class 'std::vector<std::string,std::allocator<std::string>>'에서는 class 'c10::Error'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Exception.h(35): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Exception.h(40,25): warning C4251: 'c10::Error::backtrace_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'c10::Error'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Exception.h(47,20): warning C4251: 'c10::Error::what_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'c10::Error'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Exception.h(48,38): warning C4251: 'c10::Error::what_without_backtrace_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'c10::Error'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\ThreadLocalDebugInfo.h(55,39): warning C4251: 'c10::ThreadLocalDebugInfo::info_': class 'std::shared_ptr<c10::DebugInfoBase>'에서는 class 'c10::ThreadLocalDebugInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\ThreadLocalDebugInfo.h(46): message : 'std::shared_ptr<c10::DebugInfoBase>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\ThreadLocalDebugInfo.h(57,53): warning C4251: 'c10::ThreadLocalDebugInfo::parent_info_': class 'std::shared_ptr<c10::ThreadLocalDebugInfo>'에서는 class 'c10::ThreadLocalDebugInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\ThreadLocalDebugInfo.h(39): message : 'std::shared_ptr<c10::ThreadLocalDebugInfo>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\ThreadLocalDebugInfo.h(83,52): warning C4251: 'c10::DebugInfoGuard::prev_info_': class 'std::shared_ptr<c10::ThreadLocalDebugInfo>'에서는 class 'c10::DebugInfoGuard'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\ThreadLocalDebugInfo.h(39): message : 'std::shared_ptr<c10::ThreadLocalDebugInfo>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\Allocator.h(22,34): warning C4251: 'c10::DataPtr::ptr_': class 'c10::detail::UniqueVoidPtr'에서는 class 'c10::DataPtr'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\UniqueVoidPtr.h(38): message : 'c10::detail::UniqueVoidPtr' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\Allocator.h(184,57): warning C4251: 'c10::InefficientStdFunctionContext::ptr_': class 'std::unique_ptr<void,std::function<void (void *)>>'에서는 struct 'c10::InefficientStdFunctionContext'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\Allocator.h(184): message : 'std::unique_ptr<void,std::function<void (void *)>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Half-inl.h(173,32): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Half-inl.h(176,32): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Half-inl.h(179,32): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Half-inl.h(182,32): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Half-inl.h(186,28): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Half-inl.h(189,28): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Half-inl.h(192,28): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Half-inl.h(195,28): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Half-inl.h(201,32): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Half-inl.h(204,32): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Half-inl.h(207,32): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Half-inl.h(210,32): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Half-inl.h(214,28): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Half-inl.h(217,28): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Half-inl.h(220,28): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Half-inl.h(223,28): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\BFloat16-inl.h(177,36): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\BFloat16-inl.h(180,36): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\BFloat16-inl.h(183,36): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\BFloat16-inl.h(186,36): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\BFloat16-inl.h(190,32): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\BFloat16-inl.h(193,32): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\BFloat16-inl.h(196,32): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\BFloat16-inl.h(199,32): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\BFloat16-inl.h(205,36): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\BFloat16-inl.h(208,36): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\BFloat16-inl.h(211,36): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\BFloat16-inl.h(214,36): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\BFloat16-inl.h(218,32): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\BFloat16-inl.h(221,32): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\BFloat16-inl.h(224,32): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\BFloat16-inl.h(227,32): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\Scalar.h(176,6): warning C4251: 'c10::Scalar::v': union 'c10::Scalar::v_t'에서는 class 'c10::Scalar'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\Scalar.h(171): message : 'c10::Scalar::v_t' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\typeid.h(65,67): warning C4251: 'c10::IdWrapper<caffe2::TypeIdentifier,c10::util::type_index>::id_': struct 'c10::util::type_index'에서는 class 'c10::IdWrapper<caffe2::TypeIdentifier,c10::util::type_index>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeIndex.h(57): message : 'c10::util::type_index' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\typeid.h(501,45): warning C4251: 'caffe2::TypeMeta::nextTypeIndex': struct 'std::atomic<unsigned short>'에서는 class 'caffe2::TypeMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\atomic(2783): message : 'std::atomic<unsigned short>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\typeid.h(480,1): warning C4267: '인수': 'size_t'에서 'const uint16_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\intrusive_ptr.h(75,40): warning C4251: 'c10::intrusive_ptr_target::refcount_': struct 'std::atomic<unsigned __int64>'에서는 class 'c10::intrusive_ptr_target'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\atomic(2789): message : 'std::atomic<unsigned __int64>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\intrusive_ptr.h(76,41): warning C4251: 'c10::intrusive_ptr_target::weakcount_': struct 'std::atomic<unsigned __int64>'에서는 class 'c10::intrusive_ptr_target'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\atomic(2789): message : 'std::atomic<unsigned __int64>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\Storage.h(151,48): warning C4251: 'c10::Storage::storage_impl_': class 'c10::intrusive_ptr<c10::StorageImpl,c10::detail::intrusive_target_default_null_type<TTarget>>'에서는 struct 'c10::Storage'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              TTarget=c10::StorageImpl
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\Storage.h(12): message : 'c10::intrusive_ptr<c10::StorageImpl,c10::detail::intrusive_target_default_null_type<TTarget>>' 선언을 참조하십시오.
          with
          [
              TTarget=c10::StorageImpl
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\impl\LocalDispatchKeySet.h(52,27): warning C4251: 'c10::impl::LocalDispatchKeySet::included_': class 'c10::DispatchKeySet'에서는 struct 'c10::impl::LocalDispatchKeySet'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\DispatchKeySet.h(34): message : 'c10::DispatchKeySet' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\impl\LocalDispatchKeySet.h(53,27): warning C4251: 'c10::impl::LocalDispatchKeySet::excluded_': class 'c10::DispatchKeySet'에서는 struct 'c10::impl::LocalDispatchKeySet'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\DispatchKeySet.h(34): message : 'c10::DispatchKeySet' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\impl\LocalDispatchKeySet.h(88,26): warning C4251: 'c10::impl::IncludeDispatchKeyGuard::include_': class 'c10::DispatchKeySet'에서는 class 'c10::impl::IncludeDispatchKeyGuard'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\DispatchKeySet.h(34): message : 'c10::DispatchKeySet' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\impl\LocalDispatchKeySet.h(104,26): warning C4251: 'c10::impl::ExcludeDispatchKeyGuard::exclude_': class 'c10::DispatchKeySet'에서는 class 'c10::impl::ExcludeDispatchKeyGuard'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\DispatchKeySet.h(34): message : 'c10::DispatchKeySet' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\logging_is_not_google_glog.h(43,28): warning C4251: 'c10::MessageLogger::stream_': class 'std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'c10::MessageLogger'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\iosfwd(222): message : 'std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorImpl.h(229,54): warning C4251: 'c10::VariableVersion::version_counter_': class 'c10::intrusive_ptr<c10::VariableVersion::VersionCounter,c10::detail::intrusive_target_default_null_type<TTarget>>'에서는 struct 'c10::VariableVersion'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              TTarget=c10::VariableVersion::VersionCounter
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorImpl.h(229): message : 'c10::intrusive_ptr<c10::VariableVersion::VersionCounter,c10::detail::intrusive_target_default_null_type<TTarget>>' 선언을 참조하십시오.
          with
          [
              TTarget=c10::VariableVersion::VersionCounter
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorImpl.h(1722,62): warning C4251: 'c10::TensorImpl::autograd_meta_': class 'std::unique_ptr<c10::AutogradMetaInterface,std::default_delete<c10::AutogradMetaInterface>>'에서는 struct 'c10::TensorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorImpl.h(157): message : 'std::unique_ptr<c10::AutogradMetaInterface,std::default_delete<c10::AutogradMetaInterface>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorImpl.h(1725,69): warning C4251: 'c10::TensorImpl::named_tensor_meta_': class 'std::unique_ptr<c10::NamedTensorMetaInterface,std::default_delete<c10::NamedTensorMetaInterface>>'에서는 struct 'c10::TensorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorImpl.h(176): message : 'std::unique_ptr<c10::NamedTensorMetaInterface,std::default_delete<c10::NamedTensorMetaInterface>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorImpl.h(1768,41): warning C4251: 'c10::TensorImpl::device_opt_': class 'c10::optional<c10::Device>'에서는 struct 'c10::TensorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorOptions.h(22): message : 'c10::optional<c10::Device>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorImpl.h(1775,26): warning C4251: 'c10::TensorImpl::key_set_': class 'c10::DispatchKeySet'에서는 struct 'c10::TensorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\DispatchKeySet.h(34): message : 'c10::DispatchKeySet' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\DeprecatedTypePropertiesRegistry.h(26,47): warning C4251: 'at::DeprecatedTypePropertiesRegistry::registry': class 'std::unique_ptr<at::DeprecatedTypeProperties,std::default_delete<at::DeprecatedTypeProperties>>'에서는 class 'at::DeprecatedTypePropertiesRegistry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\DeprecatedTypePropertiesRegistry.h(24): message : 'std::unique_ptr<at::DeprecatedTypeProperties,std::default_delete<at::DeprecatedTypeProperties>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\GeneratorImpl.h(80,20): warning C4251: 'c10::GeneratorImpl::mutex_': class 'std::mutex'에서는 struct 'c10::GeneratorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\mutex(87): message : 'std::mutex' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\GeneratorImpl.h(94,28): warning C4251: 'c10::GeneratorImpl::key_set_': class 'c10::DispatchKeySet'에서는 struct 'c10::GeneratorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\DispatchKeySet.h(34): message : 'c10::DispatchKeySet' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\Generator.h(133,47): warning C4251: 'at::Generator::impl_': class 'c10::intrusive_ptr<c10::GeneratorImpl,c10::detail::intrusive_target_default_null_type<TTarget>>'에서는 struct 'at::Generator'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              TTarget=c10::GeneratorImpl
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\GeneratorImpl.h(69): message : 'c10::intrusive_ptr<c10::GeneratorImpl,c10::detail::intrusive_target_default_null_type<TTarget>>' 선언을 참조하십시오.
          with
          [
              TTarget=c10::GeneratorImpl
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\NamedTensor.h(67,30): warning C4251: 'at::NamedTensorMeta::names_': class 'std::vector<at::Dimname,std::allocator<at::Dimname>>'에서는 struct 'at::NamedTensorMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\NamedTensor.h(33): message : 'std::vector<at::Dimname,std::allocator<at::Dimname>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(1445,60): warning C4251: 'at::Tensor::impl_': class 'c10::intrusive_ptr<c10::TensorImpl,c10::UndefinedTensorImpl>'에서는 class 'at::Tensor'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(93): message : 'c10::intrusive_ptr<c10::TensorImpl,c10::UndefinedTensorImpl>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=at::Tensor
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::Tensor
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::Tensor
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<at::Tensor>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(631): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<at::Tensor>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=at::Tensor
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=at::Generator
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::Generator
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::Generator
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<at::Generator>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(697): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<at::Generator>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=at::Generator
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\CPUGeneratorImpl.h(34,22): warning C4251: 'at::CPUGeneratorImpl::engine_': class 'at::mt19937_engine'에서는 struct 'at::CPUGeneratorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\MT19937RNGEngine.h(108): message : 'at::mt19937_engine' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\CPUGeneratorImpl.h(35,49): warning C4251: 'at::CPUGeneratorImpl::next_float_normal_sample_': class 'c10::optional<float>'에서는 struct 'at::CPUGeneratorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\CPUGeneratorImpl.h(25): message : 'c10::optional<float>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\CPUGeneratorImpl.h(36,51): warning C4251: 'at::CPUGeneratorImpl::next_double_normal_sample_': class 'c10::optional<double>'에서는 struct 'at::CPUGeneratorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(842): message : 'c10::optional<double>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\Context.h(214,26): warning C4251: 'at::Context::thc_init': struct 'std::once_flag'에서는 class 'at::Context'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xcall_once.h(21): message : 'std::once_flag' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\Context.h(215,26): warning C4251: 'at::Context::thh_init': struct 'std::once_flag'에서는 class 'at::Context'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xcall_once.h(21): message : 'std::once_flag' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\Context.h(229,47): warning C4251: 'at::Context::quantized_engine': class 'c10::optional<c10::QEngine>'에서는 class 'at::Context'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\Context.h(229): message : 'c10::optional<c10::QEngine>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\Context.h(230,58): warning C4251: 'at::Context::thc_state': class 'std::unique_ptr<THCState,void (__cdecl *)(THCState *)>'에서는 class 'at::Context'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\detail\CUDAHooksInterface.h(76): message : 'std::unique_ptr<THCState,void (__cdecl *)(THCState *)>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\Context.h(231,58): warning C4251: 'at::Context::thh_state': class 'std::unique_ptr<THHState,void (__cdecl *)(THHState *)>'에서는 class 'at::Context'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\detail\HIPHooksInterface.h(33): message : 'std::unique_ptr<THHState,void (__cdecl *)(THHState *)>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::impl::InlineDeviceGuard<c10::impl::VirtualGuardImpl>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::InlineDeviceGuard<c10::impl::VirtualGuardImpl>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::InlineDeviceGuard<c10::impl::VirtualGuardImpl>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<c10::impl::InlineDeviceGuard<c10::impl::VirtualGuardImpl>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\impl\InlineDeviceGuard.h(388): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::impl::InlineDeviceGuard<c10::impl::VirtualGuardImpl>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\DeviceGuard.h(168): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::impl::InlineOptionalDeviceGuard<c10::impl::VirtualGuardImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::impl::InlineDeviceGuard<c10::impl::VirtualGuardImpl>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue.h(976,18): warning C4251: 'c10::IValue::payload': union 'c10::IValue::Payload'에서는 struct 'c10::IValue'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue.h(943): message : 'c10::IValue::Payload' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue.h(1094,18): warning C4251: 'c10::WeakIValue::payload': union 'c10::IValue::Payload::TriviallyCopyablePayload'에서는 struct 'c10::WeakIValue'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue.h(949): message : 'c10::IValue::Payload::TriviallyCopyablePayload' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue.h(1107,51): warning C4251: 'c10::StrongTypePtr::cu_': class 'std::shared_ptr<torch::jit::CompilationUnit>'에서는 struct 'c10::StrongTypePtr'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue.h(1104): message : 'std::shared_ptr<torch::jit::CompilationUnit>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue.h(1108,30): warning C4251: 'c10::StrongTypePtr::type_': class 'std::shared_ptr<c10::Type>'에서는 struct 'c10::StrongTypePtr'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue.h(28): message : 'std::shared_ptr<c10::Type>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type_base.h(67,60): warning C4251: 'std::enable_shared_from_this<c10::Type>::_Wptr': class 'std::weak_ptr<_Ty>'에서는 class 'std::enable_shared_from_this<c10::Type>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=c10::Type
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\memory(3238): message : 'std::weak_ptr<_Ty>' 선언을 참조하십시오.
          with
          [
              _Ty=c10::Type
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::string
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::string
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::string
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<std::string>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type_base.h(107): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::string>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::string
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(109,70): warning C4251: 'c10::SingleElementType<c10::TypeKind::OptionalType,c10::OptionalType>::elem': class 'std::shared_ptr<c10::Type>'에서는 struct 'c10::SingleElementType<c10::TypeKind::OptionalType,c10::OptionalType>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue.h(28): message : 'std::shared_ptr<c10::Type>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(193,38): warning C4251: 'c10::Stride::stride_index_': class 'c10::optional<size_t>'에서는 struct 'c10::Stride'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(183): message : 'c10::optional<size_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(194,34): warning C4251: 'c10::Stride::contiguous_': class 'c10::optional<bool>'에서는 struct 'c10::Stride'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorOptions.h(40): message : 'c10::optional<bool>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(195,32): warning C4251: 'c10::Stride::stride_': class 'c10::optional<size_t>'에서는 struct 'c10::Stride'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(183): message : 'c10::optional<size_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(257,41): warning C4251: 'c10::ShapeSymbol::num_symbols': struct 'std::atomic<unsigned __int64>'에서는 struct 'c10::ShapeSymbol'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\atomic(2789): message : 'std::atomic<unsigned __int64>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(355): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(355,50): warning C4251: 'c10::SymbolicShape::dims_': class 'c10::optional<std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>>'에서는 struct 'c10::SymbolicShape'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(329): message : 'c10::optional<std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(665,45): warning C4251: 'c10::TensorType::scalar_type_': class 'c10::optional<c10::ScalarType>'에서는 struct 'c10::TensorType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\ScalarTypeToTypeMeta.h(29): message : 'c10::optional<c10::ScalarType>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(666,36): warning C4251: 'c10::TensorType::device_': class 'c10::optional<c10::Device>'에서는 struct 'c10::TensorType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorOptions.h(22): message : 'c10::optional<c10::Device>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<c10::optional<c10::Stride>,std::allocator<c10::optional<c10::Stride>>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::optional<c10::Stride>,std::allocator<c10::optional<c10::Stride>>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::optional<c10::Stride>,std::allocator<c10::optional<c10::Stride>>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<std::vector<c10::optional<c10::Stride>,std::allocator<c10::optional<c10::Stride>>>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(429): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::vector<c10::optional<c10::Stride>,std::allocator<c10::optional<c10::Stride>>>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(668): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::VaryingShape<c10::Stride>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<c10::optional<c10::Stride>,std::allocator<c10::optional<c10::Stride>>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(668,32): warning C4251: 'c10::TensorType::strides_': struct 'c10::VaryingShape<c10::Stride>'에서는 struct 'c10::TensorType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(453): message : 'c10::VaryingShape<c10::Stride>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(669,37): warning C4251: 'c10::TensorType::requires_grad_': class 'c10::optional<bool>'에서는 struct 'c10::TensorType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorOptions.h(40): message : 'c10::optional<bool>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(681,33): warning C4251: 'c10::TensorType::undefined_': class 'c10::optional<bool>'에서는 struct 'c10::TensorType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorOptions.h(40): message : 'c10::optional<bool>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<c10::optional<int64_t>,std::allocator<c10::optional<int64_t>>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::optional<int64_t>,std::allocator<c10::optional<int64_t>>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::optional<int64_t>,std::allocator<c10::optional<int64_t>>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<std::vector<c10::optional<int64_t>,std::allocator<c10::optional<int64_t>>>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(429): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::vector<c10::optional<int64_t>,std::allocator<c10::optional<int64_t>>>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(474): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::VaryingShape<int64_t>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<c10::optional<int64_t>,std::allocator<c10::optional<int64_t>>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<int64_t,std::allocator<int64_t>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<int64_t,std::allocator<int64_t>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<int64_t,std::allocator<int64_t>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<std::vector<int64_t,std::allocator<int64_t>>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(572): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::vector<int64_t,std::allocator<int64_t>>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<int64_t,std::allocator<int64_t>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(689,62): warning C4251: 'c10::SingleElementType<c10::TypeKind::ListType,c10::ListType>::elem': class 'std::shared_ptr<c10::Type>'에서는 struct 'c10::SingleElementType<c10::TypeKind::ListType,c10::ListType>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue.h(28): message : 'std::shared_ptr<c10::Type>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(807,29): warning C4251: 'c10::DictType::types': class 'std::vector<c10::TypePtr,std::allocator<c10::TypePtr>>'에서는 struct 'c10::DictType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type_base.h(204): message : 'std::vector<c10::TypePtr,std::allocator<c10::TypePtr>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(815,66): warning C4251: 'c10::SingleElementType<c10::TypeKind::FutureType,c10::FutureType>::elem': class 'std::shared_ptr<c10::Type>'에서는 struct 'c10::SingleElementType<c10::TypeKind::FutureType,c10::FutureType>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue.h(28): message : 'std::shared_ptr<c10::Type>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(857,62): warning C4251: 'c10::SingleElementType<c10::TypeKind::RRefType,c10::RRefType>::elem': class 'std::shared_ptr<c10::Type>'에서는 struct 'c10::SingleElementType<c10::TypeKind::RRefType,c10::RRefType>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue.h(28): message : 'std::shared_ptr<c10::Type>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::QualifiedName
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::QualifiedName
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::QualifiedName
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<c10::QualifiedName>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(907): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::QualifiedName>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::QualifiedName
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(907,37): warning C4251: 'c10::NamedType::name_': class 'c10::optional<c10::QualifiedName>'에서는 struct 'c10::NamedType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(891): message : 'c10::optional<c10::QualifiedName>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(990,33): warning C4251: 'c10::TupleType::elements_': class 'std::vector<c10::TypePtr,std::allocator<c10::TypePtr>>'에서는 struct 'c10::TupleType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type_base.h(204): message : 'std::vector<c10::TypePtr,std::allocator<c10::TypePtr>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(992,42): warning C4251: 'c10::TupleType::schema_': class 'std::shared_ptr<c10::FunctionSchema>'에서는 struct 'c10::TupleType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(958): message : 'std::shared_ptr<c10::FunctionSchema>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(1074,22): warning C4251: 'c10::EnumType::value_type_': class 'std::shared_ptr<c10::Type>'에서는 struct 'c10::EnumType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue.h(28): message : 'std::shared_ptr<c10::Type>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(1075,48): warning C4251: 'c10::EnumType::enum_names_values_': class 'std::vector<c10::EnumNameValue,std::allocator<c10::EnumNameValue>>'에서는 struct 'c10::EnumType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(1004): message : 'std::vector<c10::EnumNameValue,std::allocator<c10::EnumNameValue>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(1076,51): warning C4251: 'c10::EnumType::cu_': class 'std::weak_ptr<torch::jit::CompilationUnit>'에서는 struct 'c10::EnumType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(1004): message : 'std::weak_ptr<torch::jit::CompilationUnit>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(1866,25): warning C4251: 'c10::ClassAttribute::attributeType_': class 'std::shared_ptr<c10::Type>'에서는 struct 'c10::ClassAttribute'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue.h(28): message : 'std::shared_ptr<c10::Type>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(1867,29): warning C4251: 'c10::ClassAttribute::attributeName_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'c10::ClassAttribute'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(2228,42): warning C4251: 'c10::ClassType::constantNames_': class 'std::vector<std::string,std::allocator<std::string>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Exception.h(35): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(2229,38): warning C4251: 'c10::ClassType::constantValues_': class 'std::vector<c10::IValue,std::allocator<c10::IValue>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\List.h(24): message : 'std::vector<c10::IValue,std::allocator<c10::IValue>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(2231,51): warning C4251: 'c10::ClassType::compilation_unit_': class 'std::weak_ptr<torch::jit::CompilationUnit>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(1004): message : 'std::weak_ptr<torch::jit::CompilationUnit>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(2234,42): warning C4251: 'c10::ClassType::attributes_': class 'std::vector<c10::ClassAttribute,std::allocator<c10::ClassAttribute>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(2142): message : 'std::vector<c10::ClassAttribute,std::allocator<c10::ClassAttribute>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(2237,39): warning C4251: 'c10::ClassType::attributeTypes_': class 'std::vector<c10::TypePtr,std::allocator<c10::TypePtr>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type_base.h(204): message : 'std::vector<c10::TypePtr,std::allocator<c10::TypePtr>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(2240,46): warning C4251: 'c10::ClassType::methods_': class 'std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(1917): message : 'std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(2243,52): warning C4251: 'c10::ClassType::forward_hooks_': class 'std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(1917): message : 'std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(2244,56): warning C4251: 'c10::ClassType::forward_pre_hooks_': class 'std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(1917): message : 'std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(2247,36): warning C4251: 'c10::ClassType::properties_': class 'std::vector<c10::ClassType::Property,std::allocator<c10::ClassType::Property>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(2247): message : 'std::vector<c10::ClassType::Property,std::allocator<c10::ClassType::Property>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(2252,27): warning C4251: 'c10::ClassType::doc_string_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(2310,56): warning C4251: 'c10::InterfaceType::methods_': class 'std::shared_ptr<std::vector<c10::FunctionSchema,std::allocator<c10::FunctionSchema>>>'에서는 struct 'c10::InterfaceType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(2310): message : 'std::shared_ptr<std::vector<c10::FunctionSchema,std::allocator<c10::FunctionSchema>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(216,25): warning C4251: 'c10::ivalue::ConstantString::str_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'c10::ivalue::ConstantString'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(236,32): warning C4251: 'c10::ivalue::Tuple::elements_': class 'std::vector<c10::IValue,std::allocator<c10::IValue>>'에서는 struct 'c10::ivalue::Tuple'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\List.h(24): message : 'std::vector<c10::IValue,std::allocator<c10::IValue>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(238,12): warning C4251: 'c10::ivalue::Tuple::type_': class 'std::shared_ptr<c10::TupleType>'에서는 struct 'c10::ivalue::Tuple'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(924): message : 'std::shared_ptr<c10::TupleType>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(310,62): warning C4275: DLL 인터페이스가 아닌 class 'std::exception'이(가) DLL 인터페이스 struct 'c10::ivalue::Future::FutureError'의 기본으로 사용되었습니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\vcruntime_exception.h(48): message : 'std::exception' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(310): message : 'c10::ivalue::Future::FutureError' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(320,26): warning C4251: 'c10::ivalue::Future::FutureError::error_msg': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'c10::ivalue::Future::FutureError'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(561,28): warning C4251: 'c10::ivalue::Future::mutex_': class 'std::mutex'에서는 struct 'c10::ivalue::Future'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\mutex(87): message : 'std::mutex' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(562,31): warning C4251: 'c10::ivalue::Future::completed_': struct 'std::atomic<bool>'에서는 struct 'c10::ivalue::Future'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\atomic(2777): message : 'std::atomic<bool>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(563,39): warning C4251: 'c10::ivalue::Future::finished_cv_': class 'std::condition_variable'에서는 struct 'c10::ivalue::Future'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\mutex(575): message : 'std::condition_variable' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(566,16): warning C4251: 'c10::ivalue::Future::type_': class 'std::shared_ptr<c10::Type>'에서는 struct 'c10::ivalue::Future'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue.h(28): message : 'std::shared_ptr<c10::Type>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(567,52): warning C4251: 'c10::ivalue::Future::callbacks_': class 'std::vector<std::function<void (void)>,std::allocator<std::function<void (void)>>>'에서는 struct 'c10::ivalue::Future'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(567): message : 'std::vector<std::function<void (void)>,std::allocator<std::function<void (void)>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(568,27): warning C4251: 'c10::ivalue::Future::eptr_': class 'std::exception_ptr'에서는 struct 'c10::ivalue::Future'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\exception(214): message : 'std::exception_ptr' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(665,29): warning C4251: 'c10::ivalue::Object::slots_': class 'std::vector<c10::IValue,std::allocator<c10::IValue>>'에서는 struct 'c10::ivalue::Object'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\List.h(24): message : 'std::vector<c10::IValue,std::allocator<c10::IValue>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(760,1): warning C4244: 'return': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(763,1): warning C4244: 'return': 'int64_t'에서 'unsigned char'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(764,1): warning C4244: 'return': 'int64_t'에서 'signed char'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(765,1): warning C4244: 'return': 'int64_t'에서 'unsigned short'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(766,1): warning C4244: 'return': 'int64_t'에서 'short'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(767,1): warning C4244: 'return': 'int64_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(768,1): warning C4244: 'return': 'int64_t'에서 'uint32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(770,1): warning C4244: 'return': 'int64_t'에서 'c10::detail::_guarded_unsigned_long'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\record_function.h(73,46): warning C4251: 'at::StringView::owned_str_ptr_': class 'std::shared_ptr<std::string>'에서는 struct 'at::StringView'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\record_function.h(73): message : 'std::shared_ptr<std::string>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::OperatorName
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::OperatorName
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::OperatorName
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<c10::OperatorName>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\record_function.h(266): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::OperatorName>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::OperatorName
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\record_function.h(282,32): warning C4251: 'at::RecordFunction::state_': class 'std::unique_ptr<at::RecordFunction::State,std::default_delete<at::RecordFunction::State>>'에서는 struct 'at::RecordFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\record_function.h(282): message : 'std::unique_ptr<at::RecordFunction::State,std::default_delete<at::RecordFunction::State>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\record_function.h(543,48): warning C4251: 'at::RecordFunctionTLS::sorted_tls_callbacks_': class 'std::vector<std::pair<at::RecordFunctionCallback,at::CallbackHandle>,std::allocator<std::pair<at::RecordFunctionCallback,at::CallbackHandle>>>'에서는 struct 'at::RecordFunctionTLS'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\record_function.h(449): message : 'std::vector<std::pair<at::RecordFunctionCallback,at::CallbackHandle>,std::allocator<std::pair<at::RecordFunctionCallback,at::CallbackHandle>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorGeometry.h(56,30): warning C4251: 'at::TensorGeometry::sizes_': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 struct 'at::TensorGeometry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\MemoryFormat.h(56): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorGeometry.h(57,32): warning C4251: 'at::TensorGeometry::strides_': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 struct 'at::TensorGeometry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\MemoryFormat.h(56): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorNames.h(40,28): warning C4251: 'at::namedinference::TensorName::origin_': class 'c10::ArrayRef<at::Dimname>'에서는 struct 'at::namedinference::TensorName'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\Dimname.h(36): message : 'c10::ArrayRef<at::Dimname>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorNames.h(70,23): warning C4251: 'at::namedinference::TensorNames::names_': class 'c10::SmallVector<at::namedinference::TensorName,10>'에서는 struct 'at::namedinference::TensorNames'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorNames.h(49): message : 'c10::SmallVector<at::namedinference::TensorName,10>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(86,28): warning C4251: 'at::OperandInfo::stride_bytes': class 'c10::SmallVector<int64_t,6>'에서는 struct 'at::OperandInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(74): message : 'c10::SmallVector<int64_t,6>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(352,19): warning C4251: 'at::TensorIteratorBase::shape_': class 'c10::SmallVector<int64_t,5>'에서는 struct 'at::TensorIteratorBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorImpl.h(1111): message : 'c10::SmallVector<int64_t,5>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(362,18): warning C4251: 'at::TensorIteratorBase::perm_': class 'c10::SmallVector<int64_t,5>'에서는 struct 'at::TensorIteratorBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorImpl.h(1111): message : 'c10::SmallVector<int64_t,5>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(371,26): warning C4251: 'at::TensorIteratorBase::view_offsets_': class 'c10::SmallVector<int64_t,5>'에서는 struct 'at::TensorIteratorBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorImpl.h(1111): message : 'c10::SmallVector<int64_t,5>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(374,20): warning C4251: 'at::TensorIteratorBase::names_': class 'c10::SmallVector<at::Dimname,5>'에서는 struct 'at::TensorIteratorBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\NamedTensorUtils.h(11): message : 'c10::SmallVector<at::Dimname,5>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(385,40): warning C4251: 'at::TensorIteratorBase::operands_': class 'c10::SmallVector<at::OperandInfo,4>'에서는 struct 'at::TensorIteratorBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(385): message : 'c10::SmallVector<at::OperandInfo,4>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(169,20): warning C4267: 'return': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(172,24): warning C4267: 'return': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(512,34): warning C4251: 'at::TensorIteratorConfig::tensors_': class 'c10::SmallVector<at::Tensor,4>'에서는 class 'at::TensorIteratorConfig'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(512): message : 'c10::SmallVector<at::Tensor,4>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=at::DimVector
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::DimVector
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::DimVector
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<at::DimVector>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(516): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<at::DimVector>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=at::DimVector
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(516,42): warning C4251: 'at::TensorIteratorConfig::static_shape_': class 'c10::optional<at::DimVector>'에서는 class 'at::TensorIteratorConfig'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(516): message : 'c10::optional<at::DimVector>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(517,73): warning C4251: 'at::TensorIteratorConfig::static_dtype_and_device_': class 'c10::optional<std::pair<c10::ScalarType,c10::Device>>'에서는 class 'at::TensorIteratorConfig'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(517): message : 'c10::optional<std::pair<c10::ScalarType,c10::Device>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(552,53): warning C4251: 'at::SplitUntil32Bit::iterator::vec': class 'std::vector<std::unique_ptr<at::TensorIterator,std::default_delete<at::TensorIterator>>,std::allocator<std::unique_ptr<at::TensorIterator,std::default_delete<at::TensorIterator>>>>'에서는 struct 'at::SplitUntil32Bit::iterator'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\TensorIterator.h(552): message : 'std::vector<std::unique_ptr<at::TensorIterator,std::default_delete<at::TensorIterator>>,std::allocator<std::unique_ptr<at::TensorIterator,std::default_delete<at::TensorIterator>>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\forward_grad.h(106,60): warning C4251: 'torch::autograd::ForwardADLevel::grads_': class 'std::unordered_set<std::shared_ptr<torch::autograd::ForwardGrad>,std::hash<std::shared_ptr<torch::autograd::ForwardGrad>>,std::equal_to<std::shared_ptr<torch::autograd::ForwardGrad>>,std::allocator<std::shared_ptr<torch::autograd::ForwardGrad>>>'에서는 struct 'torch::autograd::ForwardADLevel'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\forward_grad.h(106): message : 'std::unordered_set<std::shared_ptr<torch::autograd::ForwardGrad>,std::hash<std::shared_ptr<torch::autograd::ForwardGrad>>,std::equal_to<std::shared_ptr<torch::autograd::ForwardGrad>>,std::allocator<std::shared_ptr<torch::autograd::ForwardGrad>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\forward_grad.h(107,22): warning C4251: 'torch::autograd::ForwardADLevel::mutex_': class 'std::mutex'에서는 struct 'torch::autograd::ForwardADLevel'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\mutex(87): message : 'std::mutex' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\forward_grad.h(112,74): warning C4251: 'std::enable_shared_from_this<torch::autograd::ForwardGrad>::_Wptr': class 'std::weak_ptr<_Ty>'에서는 class 'std::enable_shared_from_this<torch::autograd::ForwardGrad>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=torch::autograd::ForwardGrad
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\memory(3238): message : 'std::weak_ptr<_Ty>' 선언을 참조하십시오.
          with
          [
              _Ty=torch::autograd::ForwardGrad
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\forward_grad.h(183,54): warning C4251: 'torch::autograd::ForwardGrad::content_': class 'std::unordered_map<uint64_t,at::Tensor,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<std::pair<const uint64_t,at::Tensor>>>'에서는 struct 'torch::autograd::ForwardGrad'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\forward_grad.h(183): message : 'std::unordered_map<uint64_t,at::Tensor,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<std::pair<const uint64_t,at::Tensor>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\forward_grad.h(184,30): warning C4251: 'torch::autograd::ForwardGrad::mutex_': class 'std::mutex'에서는 struct 'torch::autograd::ForwardGrad'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\mutex(87): message : 'std::mutex' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(191,20): warning C4251: 'torch::autograd::AutogradMeta::name_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'torch::autograd::AutogradMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(194,33): warning C4251: 'torch::autograd::AutogradMeta::grad_fn_': class 'std::shared_ptr<torch::autograd::Node>'에서는 struct 'torch::autograd::AutogradMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(1373): message : 'std::shared_ptr<torch::autograd::Node>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(195,40): warning C4251: 'torch::autograd::AutogradMeta::grad_accumulator_': class 'std::weak_ptr<torch::autograd::Node>'에서는 struct 'torch::autograd::AutogradMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(119): message : 'std::weak_ptr<torch::autograd::Node>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(206,40): warning C4251: 'torch::autograd::AutogradMeta::fw_grad_': class 'std::shared_ptr<torch::autograd::ForwardGrad>'에서는 struct 'torch::autograd::AutogradMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\forward_grad.h(95): message : 'std::shared_ptr<torch::autograd::ForwardGrad>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(208,55): warning C4251: 'torch::autograd::AutogradMeta::hooks_': class 'std::vector<std::shared_ptr<torch::autograd::FunctionPreHook>,std::allocator<std::shared_ptr<torch::autograd::FunctionPreHook>>>'에서는 struct 'torch::autograd::AutogradMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(175): message : 'std::vector<std::shared_ptr<torch::autograd::FunctionPreHook>,std::allocator<std::shared_ptr<torch::autograd::FunctionPreHook>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(209,45): warning C4251: 'torch::autograd::AutogradMeta::cpp_hooks_list': class 'std::shared_ptr<torch::autograd::hooks_list>'에서는 struct 'torch::autograd::AutogradMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\cpp_hook.h(11): message : 'std::shared_ptr<torch::autograd::hooks_list>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(230,28): warning C4251: 'torch::autograd::AutogradMeta::mutex_': class 'std::mutex'에서는 struct 'torch::autograd::AutogradMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\mutex(87): message : 'std::mutex' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(296,52): warning C4251: 'torch::autograd::ViewInfo::view_fn_': class 'std::function<at::Tensor (const at::Tensor &)>'에서는 struct 'torch::autograd::ViewInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(1419): message : 'std::function<at::Tensor (const at::Tensor &)>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::autograd::ViewInfo
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::autograd::ViewInfo
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::autograd::ViewInfo
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<torch::autograd::ViewInfo>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(522): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<torch::autograd::ViewInfo>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::autograd::ViewInfo
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(522,41): warning C4251: 'torch::autograd::DifferentiableViewMeta::backward_info_': class 'c10::optional<torch::autograd::ViewInfo>'에서는 struct 'torch::autograd::DifferentiableViewMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(522): message : 'c10::optional<torch::autograd::ViewInfo>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(523,40): warning C4251: 'torch::autograd::DifferentiableViewMeta::forward_info_': class 'c10::optional<torch::autograd::ViewInfo>'에서는 struct 'torch::autograd::DifferentiableViewMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(522): message : 'c10::optional<torch::autograd::ViewInfo>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::IValue
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::IValue
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::IValue
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<c10::IValue>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\function_schema.h(115): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::IValue>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::IValue
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::AliasInfo
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::AliasInfo
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::AliasInfo
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<c10::AliasInfo>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\function_schema.h(118): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::AliasInfo>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::AliasInfo
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\attributes.h(108,52): warning C4275: DLL 인터페이스가 아닌 struct 'torch::jit::AttributeValue'이(가) DLL 인터페이스 struct 'torch::jit::GraphAttr'의 기본으로 사용되었습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\attributes.h(42): message : 'torch::jit::AttributeValue' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\attributes.h(108): message : 'torch::jit::GraphAttr' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\attributes.h(122,32): warning C4251: 'torch::jit::GraphAttr::value_': class 'std::shared_ptr<torch::jit::Graph>'에서는 struct 'torch::jit::GraphAttr'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\function.h(26): message : 'std::shared_ptr<torch::jit::Graph>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\attributes.h(125,53): warning C4275: DLL 인터페이스가 아닌 struct 'torch::jit::AttributeValue'이(가) DLL 인터페이스 struct 'torch::jit::GraphsAttr'의 기본으로 사용되었습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\attributes.h(42): message : 'torch::jit::AttributeValue' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\attributes.h(125): message : 'torch::jit::GraphsAttr' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\attributes.h(139,19): warning C4251: 'torch::jit::GraphsAttr::value_': class 'std::vector<std::shared_ptr<torch::jit::Graph>,std::allocator<std::shared_ptr<torch::jit::Graph>>>'에서는 struct 'torch::jit::GraphsAttr'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\attributes.h(126): message : 'std::vector<std::shared_ptr<torch::jit::Graph>,std::allocator<std::shared_ptr<torch::jit::Graph>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\frontend\source_range.h(176,34): warning C4251: 'torch::jit::SourceRange::source_': class 'std::shared_ptr<torch::jit::Source>'에서는 struct 'torch::jit::SourceRange'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\frontend\source_range.h(110): message : 'std::shared_ptr<torch::jit::Source>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::tuple<std::string,size_t,size_t>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::tuple<std::string,size_t,size_t>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::tuple<std::string,size_t,size_t>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<std::tuple<std::string,size_t,size_t>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\frontend\source_range.h(145): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::tuple<std::string,size_t,size_t>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::tuple<std::string,size_t,size_t>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::SourceRange
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::SourceRange
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::SourceRange
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<torch::jit::SourceRange>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\frontend\source_range.h(168): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<torch::jit::SourceRange>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::SourceRange
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\scope.h(26,19): warning C4251: 'torch::jit::Scope::parent_': class 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>'에서는 struct 'torch::jit::Scope'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              TTarget=torch::jit::Scope
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\scope.h(21): message : 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>' 선언을 참조하십시오.
          with
          [
              TTarget=torch::jit::Scope
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::InlinedCallStackPtr
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::InlinedCallStackPtr
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::InlinedCallStackPtr
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<torch::jit::InlinedCallStackPtr>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\scope.h(115): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<torch::jit::InlinedCallStackPtr>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::InlinedCallStackPtr
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\scope.h(115,45): warning C4251: 'torch::jit::InlinedCallStack::callee_': class 'c10::optional<torch::jit::InlinedCallStackPtr>'에서는 struct 'torch::jit::InlinedCallStack'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\scope.h(115): message : 'c10::optional<torch::jit::InlinedCallStackPtr>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::ModuleInstanceInfo
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::ModuleInstanceInfo
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::ModuleInstanceInfo
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<torch::jit::ModuleInstanceInfo>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\scope.h(119): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<torch::jit::ModuleInstanceInfo>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::ModuleInstanceInfo
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\scope.h(119,58): warning C4251: 'torch::jit::InlinedCallStack::module_instance_info_': class 'c10::optional<torch::jit::ModuleInstanceInfo>'에서는 struct 'torch::jit::InlinedCallStack'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\scope.h(111): message : 'c10::optional<torch::jit::ModuleInstanceInfo>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\constants.h(20,75): warning C4275: DLL 인터페이스가 아닌 class 'std::runtime_error'이(가) DLL 인터페이스 struct 'torch::jit::constant_not_supported_error'의 기본으로 사용되었습니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\stdexcept(107): message : 'std::runtime_error' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\constants.h(20): message : 'torch::jit::constant_not_supported_error' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::ScopePtr
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::ScopePtr
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::ScopePtr
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<torch::jit::ScopePtr>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\constants.h(28): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<torch::jit::ScopePtr>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::ScopePtr
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\boxing\KernelFunction.h(188,43): warning C4251: 'c10::KernelFunction::functor_': class 'std::shared_ptr<c10::OperatorKernel>'에서는 class 'c10::KernelFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\boxing\KernelFunction.h(188): message : 'std::shared_ptr<c10::OperatorKernel>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\DispatchKeyExtractor.h(191,51): warning C4251: 'c10::DispatchKeyExtractor::dispatch_arg_indices_reverse_': struct 'c10::utils::bitset'에서는 struct 'c10::DispatchKeyExtractor'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Bitset.h(23): message : 'c10::utils::bitset' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\DispatchKeyExtractor.h(194,37): warning C4251: 'c10::DispatchKeyExtractor::nonFallthroughKeys_': class 'c10::DispatchKeySet'에서는 struct 'c10::DispatchKeyExtractor'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\DispatchKeySet.h(34): message : 'c10::DispatchKeySet' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\CppSignature.h(52,31): warning C4251: 'c10::impl::CppSignature::signature_': class 'std::type_index'에서는 class 'c10::impl::CppSignature'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\typeindex(25): message : 'std::type_index' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\OperatorEntry.h(181,21): warning C4251: 'c10::impl::OperatorEntry::name_': struct 'c10::OperatorName'에서는 class 'c10::impl::OperatorEntry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\operator_name.h(14): message : 'c10::OperatorName' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::impl::AnnotatedSchema
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::AnnotatedSchema
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::AnnotatedSchema
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<c10::impl::AnnotatedSchema>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\OperatorEntry.h(182): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::impl::AnnotatedSchema>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::impl::AnnotatedSchema
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\OperatorEntry.h(182,41): warning C4251: 'c10::impl::OperatorEntry::schema_': class 'c10::optional<c10::impl::AnnotatedSchema>'에서는 class 'c10::impl::OperatorEntry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\OperatorEntry.h(182): message : 'c10::optional<c10::impl::AnnotatedSchema>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\OperatorEntry.h(218,71): warning C4251: 'c10::impl::OperatorEntry::kernels_': class 'ska::flat_hash_map<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>,std::hash<c10::DispatchKey>,std::equal_to<K>,std::allocator<std::pair<K,V>>>'에서는 class 'c10::impl::OperatorEntry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\OperatorEntry.h(218): message : 'ska::flat_hash_map<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>,std::hash<c10::DispatchKey>,std::equal_to<K>,std::allocator<std::pair<K,V>>>' 선언을 참조하십시오.
          with
          [
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\OperatorEntry.h(220,33): warning C4251: 'c10::impl::OperatorEntry::missingKernel_': struct 'c10::impl::AnnotatedKernel'에서는 class 'c10::impl::OperatorEntry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\OperatorEntry.h(31): message : 'c10::impl::AnnotatedKernel' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\OperatorEntry.h(221,61): warning C4251: 'c10::impl::OperatorEntry::ambiguousAutogradOtherKernel_': struct 'c10::impl::AnnotatedKernel'에서는 class 'c10::impl::OperatorEntry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\OperatorEntry.h(31): message : 'c10::impl::AnnotatedKernel' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::impl::OperatorEntry::CppSignatureWithDebug
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::OperatorEntry::CppSignatureWithDebug
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::OperatorEntry::CppSignatureWithDebug
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<c10::impl::OperatorEntry::CppSignatureWithDebug>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\OperatorEntry.h(234): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::impl::OperatorEntry::CppSignatureWithDebug>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::impl::OperatorEntry::CppSignatureWithDebug
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\OperatorEntry.h(234,54): warning C4251: 'c10::impl::OperatorEntry::cpp_signature_': class 'c10::optional<c10::impl::OperatorEntry::CppSignatureWithDebug>'에서는 class 'c10::impl::OperatorEntry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\OperatorEntry.h(234): message : 'c10::optional<c10::impl::OperatorEntry::CppSignatureWithDebug>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\Dispatcher.h(266,36): warning C4251: 'c10::Dispatcher::operators_': class 'std::list<c10::Dispatcher::OperatorDef,std::allocator<c10::Dispatcher::OperatorDef>>'에서는 class 'c10::Dispatcher'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\Dispatcher.h(266): message : 'std::list<c10::Dispatcher::OperatorDef,std::allocator<c10::Dispatcher::OperatorDef>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\Dispatcher.h(267,83): warning C4251: 'c10::Dispatcher::operatorLookupTable_': class 'c10::LeftRight<ska::flat_hash_map<c10::OperatorName,c10::OperatorHandle,std::hash<c10::OperatorName>,std::equal_to<K>,std::allocator<std::pair<K,V>>>>'에서는 class 'c10::Dispatcher'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              K=c10::OperatorName,
              V=c10::OperatorHandle
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\Dispatcher.h(267): message : 'c10::LeftRight<ska::flat_hash_map<c10::OperatorName,c10::OperatorHandle,std::hash<c10::OperatorName>,std::equal_to<K>,std::allocator<std::pair<K,V>>>>' 선언을 참조하십시오.
          with
          [
              K=c10::OperatorName,
              V=c10::OperatorHandle
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\Dispatcher.h(269,58): warning C4251: 'c10::Dispatcher::libraries_': class 'ska::flat_hash_map<std::string,std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<K,V>>>'에서는 class 'c10::Dispatcher'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              K=std::string,
              V=std::string
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\Dispatcher.h(269): message : 'ska::flat_hash_map<std::string,std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<K,V>>>' 선언을 참조하십시오.
          with
          [
              K=std::string,
              V=std::string
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\Dispatcher.h(273,63): warning C4251: 'c10::Dispatcher::listeners_': class 'std::unique_ptr<c10::detail::RegistrationListenerList,std::default_delete<c10::detail::RegistrationListenerList>>'에서는 class 'c10::Dispatcher'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\Dispatcher.h(273): message : 'std::unique_ptr<c10::detail::RegistrationListenerList,std::default_delete<c10::detail::RegistrationListenerList>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\Dispatcher.h(274,20): warning C4251: 'c10::Dispatcher::mutex_': class 'std::mutex'에서는 class 'c10::Dispatcher'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\mutex(87): message : 'std::mutex' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\Dispatcher.h(341,65): warning C4251: 'c10::OperatorHandle::operatorIterator_': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'에서는 class 'c10::OperatorHandle'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\list(796): message : 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::either<c10::OperatorName,c10::FunctionSchema>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::either<c10::OperatorName,c10::FunctionSchema>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::either<c10::OperatorName,c10::FunctionSchema>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<c10::either<c10::OperatorName,c10::FunctionSchema>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\op_registration\op_registration.h(429): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::either<c10::OperatorName,c10::FunctionSchema>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::either<c10::OperatorName,c10::FunctionSchema>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\op_registration\op_registration.h(429,75): warning C4251: 'c10::RegisterOperators::Options::schemaOrName_': class 'c10::optional<c10::either<c10::OperatorName,c10::FunctionSchema>>'에서는 class 'c10::RegisterOperators::Options'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\op_registration\op_registration.h(429): message : 'c10::optional<c10::either<c10::OperatorName,c10::FunctionSchema>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\op_registration\op_registration.h(431,50): warning C4251: 'c10::RegisterOperators::Options::kernels': class 'std::vector<c10::RegisterOperators::Options::KernelRegistrationConfig,std::allocator<c10::RegisterOperators::Options::KernelRegistrationConfig>>'에서는 class 'c10::RegisterOperators::Options'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\op_registration\op_registration.h(431): message : 'std::vector<c10::RegisterOperators::Options::KernelRegistrationConfig,std::allocator<c10::RegisterOperators::Options::KernelRegistrationConfig>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\op_registration\op_registration.h(432,51): warning C4251: 'c10::RegisterOperators::Options::aliasAnalysisKind_': class 'c10::optional<c10::AliasAnalysisKind>'에서는 class 'c10::RegisterOperators::Options'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\function_schema.h(207): message : 'c10::optional<c10::AliasAnalysisKind>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\op_registration\op_registration.h(583,50): warning C4251: 'c10::RegisterOperators::registrars_': class 'std::vector<c10::RegistrationHandleRAII,std::allocator<c10::RegistrationHandleRAII>>'에서는 class 'c10::RegisterOperators'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\op_registration\op_registration.h(583): message : 'std::vector<c10::RegistrationHandleRAII,std::allocator<c10::RegistrationHandleRAII>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\library.h(230,48): warning C4251: 'torch::CppFunction::dispatch_key_': class 'c10::optional<c10::DispatchKey>'에서는 class 'torch::CppFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\OperatorEntry.h(119): message : 'c10::optional<c10::DispatchKey>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\library.h(232,56): warning C4251: 'torch::CppFunction::cpp_signature_': class 'c10::optional<c10::impl::CppSignature>'에서는 class 'torch::CppFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\OperatorEntry.h(121): message : 'c10::optional<c10::impl::CppSignature>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\library.h(233,47): warning C4251: 'torch::CppFunction::schema_': class 'std::unique_ptr<c10::FunctionSchema,std::default_delete<c10::FunctionSchema>>'에서는 class 'torch::CppFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\OperatorEntry.h(32): message : 'std::unique_ptr<c10::FunctionSchema,std::default_delete<c10::FunctionSchema>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\library.h(234,21): warning C4251: 'torch::CppFunction::debug_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'torch::CppFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\library.h(652,33): warning C4251: 'torch::Library::ns_': class 'c10::optional<std::string>'에서는 class 'torch::Library'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\List.h(69): message : 'c10::optional<std::string>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\library.h(653,48): warning C4251: 'torch::Library::dispatch_key_': class 'c10::optional<c10::DispatchKey>'에서는 class 'torch::Library'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\OperatorEntry.h(119): message : 'c10::optional<c10::DispatchKey>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\library.h(657,55): warning C4251: 'torch::Library::registrars_': class 'std::vector<c10::RegistrationHandleRAII,std::allocator<c10::RegistrationHandleRAII>>'에서는 class 'torch::Library'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\op_registration\op_registration.h(583): message : 'std::vector<c10::RegistrationHandleRAII,std::allocator<c10::RegistrationHandleRAII>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\runtime\operator.h(193,48): warning C4251: 'torch::jit::Operator::op_': class 'c10::either<torch::jit::Operator::C10Operator,torch::jit::Operator::JitOnlyOperator>'에서는 struct 'torch::jit::Operator'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\runtime\operator.h(193): message : 'c10::either<torch::jit::Operator::C10Operator,torch::jit::Operator::JitOnlyOperator>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\ir.h(297,30): warning C4251: 'torch::jit::Node::inputs_': class 'std::vector<torch::jit::Value *,std::allocator<torch::jit::Value *>>'에서는 struct 'torch::jit::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\ir.h(143): message : 'std::vector<torch::jit::Value *,std::allocator<torch::jit::Value *>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\ir.h(298,31): warning C4251: 'torch::jit::Node::outputs_': class 'std::vector<torch::jit::Value *,std::allocator<torch::jit::Value *>>'에서는 struct 'torch::jit::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\ir.h(143): message : 'std::vector<torch::jit::Value *,std::allocator<torch::jit::Value *>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\ir.h(300,30): warning C4251: 'torch::jit::Node::blocks_': class 'std::vector<torch::jit::Block *,std::allocator<torch::jit::Block *>>'에서는 struct 'torch::jit::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\ir.h(300): message : 'std::vector<torch::jit::Block *,std::allocator<torch::jit::Block *>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\ir.h(303,43): warning C4251: 'torch::jit::Node::source_range_': class 'c10::optional<torch::jit::SourceRange>'에서는 struct 'torch::jit::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\frontend\source_range.h(85): message : 'c10::optional<torch::jit::SourceRange>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\ir.h(304,18): warning C4251: 'torch::jit::Node::scope_': class 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>'에서는 struct 'torch::jit::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              TTarget=torch::jit::Scope
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\scope.h(21): message : 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>' 선언을 참조하십시오.
          with
          [
              TTarget=torch::jit::Scope
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\ir.h(305,48): warning C4251: 'torch::jit::Node::callstack_': class 'c10::optional<torch::jit::InlinedCallStackPtr>'에서는 struct 'torch::jit::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\scope.h(115): message : 'c10::optional<torch::jit::InlinedCallStackPtr>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\ir.h(313,36): warning C4251: 'torch::jit::Node::wrap_': class 'std::shared_ptr<torch::jit::Wrap<torch::jit::Node>>'에서는 struct 'torch::jit::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\ir.h(313): message : 'std::shared_ptr<torch::jit::Wrap<torch::jit::Node>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\ir.h(871,29): warning C4251: 'torch::jit::Node::values_': class 'std::vector<torch::jit::Node::AVPtr,std::allocator<torch::jit::Node::AVPtr>>'에서는 struct 'torch::jit::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\ir.h(871): message : 'std::vector<torch::jit::Node::AVPtr,std::allocator<torch::jit::Node::AVPtr>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\ir\ir.h(1436,54): warning C4251: 'torch::jit::ProfileIValueOp::callback_': class 'std::function<void (torch::jit::Stack &)>'에서는 struct 'torch::jit::ProfileIValueOp'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\builtin_function.h(17): message : 'std::function<void (torch::jit::Stack &)>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\runtime\argument_spec.h(200,34): warning C4251: 'torch::jit::ArgumentSpecCreator::instructions_': class 'std::vector<torch::jit::ArgumentSpecCreator::Inst,std::allocator<torch::jit::ArgumentSpecCreator::Inst>>'에서는 struct 'torch::jit::ArgumentSpecCreator'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\runtime\argument_spec.h(200): message : 'std::vector<torch::jit::ArgumentSpecCreator::Inst,std::allocator<torch::jit::ArgumentSpecCreator::Inst>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\runtime\argument_spec.h(236,1): warning C4267: '초기화 중': 'size_t'에서 'int32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\runtime\argument_spec.h(236,1): warning C4267: '초기화 중': 'size_t'에서 'const int32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\runtime\argument_spec.h(241,1): warning C4244: '+=': 'int64_t'에서 'int32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\runtime\argument_spec.h(260,1): warning C4244: '+=': 'int64_t'에서 'int32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\runtime\argument_spec.h(432,39): warning C4267: '인수': 'size_t'에서 'const int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\ThreadLocalState.h(31,57): warning C4251: 'at::ThreadLocalState::debug_info_': class 'std::shared_ptr<c10::ThreadLocalDebugInfo>'에서는 class 'at::ThreadLocalState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\ThreadLocalDebugInfo.h(39): message : 'std::shared_ptr<c10::ThreadLocalDebugInfo>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\runtime\interpreter.h(68,34): warning C4251: 'torch::jit::Code::pImpl': class 'std::shared_ptr<torch::jit::CodeImpl>'에서는 struct 'torch::jit::Code'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\runtime\interpreter.h(68): message : 'std::shared_ptr<torch::jit::CodeImpl>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=at::ThreadLocalState
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::ThreadLocalState
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::ThreadLocalState
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<at::ThreadLocalState>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\runtime\interpreter.h(125): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<at::ThreadLocalState>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=at::ThreadLocalState
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\runtime\graph_executor.h(89,47): warning C4251: 'torch::jit::GraphExecutor::pImpl': class 'std::shared_ptr<torch::jit::GraphExecutorImplBase>'에서는 struct 'torch::jit::GraphExecutor'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\runtime\graph_executor.h(89): message : 'std::shared_ptr<torch::jit::GraphExecutorImplBase>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\function_impl.h(117,27): warning C4251: 'torch::jit::GraphFunction::name_': struct 'c10::QualifiedName'에서는 struct 'torch::jit::GraphFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\qualified_name.h(11): message : 'c10::QualifiedName' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\function_impl.h(119,32): warning C4251: 'torch::jit::GraphFunction::graph_': class 'std::shared_ptr<torch::jit::Graph>'에서는 struct 'torch::jit::GraphFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\function.h(26): message : 'std::shared_ptr<torch::jit::Graph>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::shared_ptr<torch::jit::Graph>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::shared_ptr<torch::jit::Graph>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::shared_ptr<torch::jit::Graph>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<std::shared_ptr<torch::jit::Graph>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\function_impl.h(124): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::shared_ptr<torch::jit::Graph>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::shared_ptr<torch::jit::Graph>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\function_impl.h(124,65): warning C4251: 'torch::jit::GraphFunction::optimized_graph_': class 'c10::optional<std::shared_ptr<torch::jit::Graph>>'에서는 struct 'torch::jit::GraphFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\function_impl.h(124): message : 'c10::optional<std::shared_ptr<torch::jit::Graph>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\function_impl.h(131,45): warning C4251: 'torch::jit::GraphFunction::compile_mutex': class 'std::recursive_mutex'에서는 struct 'torch::jit::GraphFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\mutex(96): message : 'std::recursive_mutex' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\function_impl.h(138,56): warning C4251: 'torch::jit::GraphFunction::function_creator_': class 'std::function<void (torch::jit::GraphFunction &)>'에서는 struct 'torch::jit::GraphFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\function_impl.h(15): message : 'std::function<void (torch::jit::GraphFunction &)>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\function_impl.h(143,50): warning C4251: 'torch::jit::GraphFunction::schema_': class 'std::unique_ptr<c10::FunctionSchema,std::default_delete<c10::FunctionSchema>>'에서는 struct 'torch::jit::GraphFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\dispatch\OperatorEntry.h(32): message : 'std::unique_ptr<c10::FunctionSchema,std::default_delete<c10::FunctionSchema>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\method.h(66,19): warning C4251: 'torch::jit::Method::owner_': class 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>'에서는 struct 'torch::jit::Method'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              TTarget=c10::ivalue::Object
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue.h(616): message : 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>' 선언을 참조하십시오.
          with
          [
              TTarget=c10::ivalue::Object
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\object.h(141,29): warning C4251: 'torch::jit::Object::_ivalue_': class 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>'에서는 struct 'torch::jit::Object'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              TTarget=c10::ivalue::Object
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue.h(616): message : 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>' 선언을 참조하십시오.
          with
          [
              TTarget=c10::ivalue::Object
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::Method
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::Method
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::Method
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<torch::jit::Method>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\object.h(93): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<torch::jit::Method>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::Method
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\frontend\tracer.h(43,57): warning C4251: 'std::enable_shared_from_this<torch::jit::tracer::TracingState>::_Wptr': class 'std::weak_ptr<_Ty>'에서는 class 'std::enable_shared_from_this<torch::jit::tracer::TracingState>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\memory(3238): message : 'std::weak_ptr<_Ty>' 선언을 참조하십시오.
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\frontend\tracer.h(47,31): warning C4251: 'torch::jit::tracer::TracingState::graph': class 'std::shared_ptr<torch::jit::Graph>'에서는 struct 'torch::jit::tracer::TracingState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\function.h(26): message : 'std::shared_ptr<torch::jit::Graph>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\frontend\tracer.h(52,45): warning C4251: 'torch::jit::tracer::TracingState::lookup_var_name_fn': class 'std::function<std::string (const torch::autograd::Variable &)>'에서는 struct 'torch::jit::tracer::TracingState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\frontend\tracer.h(51): message : 'std::function<std::string (const torch::autograd::Variable &)>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\frontend\tracer.h(85,31): warning C4251: 'torch::jit::tracer::TracingState::env_stack': class 'std::vector<torch::jit::tracer::TracingState::Frame,std::allocator<torch::jit::tracer::TracingState::Frame>>'에서는 struct 'torch::jit::tracer::TracingState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\frontend\tracer.h(85): message : 'std::vector<torch::jit::tracer::TracingState::Frame,std::allocator<torch::jit::tracer::TracingState::Frame>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\frontend\tracer.h(181,38): warning C4251: 'torch::jit::tracer::NoWarn::state': class 'std::shared_ptr<_Ty>'에서는 struct 'torch::jit::tracer::NoWarn'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\memory(3230): message : 'std::shared_ptr<_Ty>' 선언을 참조하십시오.
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\data\samplers\distributed.h(96,35): warning C4251: 'torch::data::samplers::DistributedRandomSampler::all_indices_': class 'std::vector<T,std::allocator<T>>'에서는 class 'torch::data::samplers::DistributedRandomSampler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              T=size_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\ArrayRef.h(219): message : 'std::vector<T,std::allocator<T>>' 선언을 참조하십시오.
          with
          [
              T=size_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\data\samplers\distributed.h(129,35): warning C4251: 'torch::data::samplers::DistributedSequentialSampler::all_indices_': class 'std::vector<T,std::allocator<T>>'에서는 class 'torch::data::samplers::DistributedSequentialSampler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              T=size_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\ArrayRef.h(219): message : 'std::vector<T,std::allocator<T>>' 선언을 참조하십시오.
          with
          [
              T=size_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\compilation_unit.h(317,52): warning C4251: 'torch::jit::CompilationUnit::functions_': class 'std::vector<std::unique_ptr<torch::jit::Function,std::default_delete<torch::jit::Function>>,std::allocator<std::unique_ptr<torch::jit::Function,std::default_delete<torch::jit::Function>>>>'에서는 struct 'torch::jit::CompilationUnit'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\compilation_unit.h(317): message : 'std::vector<std::unique_ptr<torch::jit::Function,std::default_delete<torch::jit::Function>>,std::allocator<std::unique_ptr<torch::jit::Function,std::default_delete<torch::jit::Function>>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\compilation_unit.h(319,55): warning C4251: 'torch::jit::CompilationUnit::dict_': class 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<c10::QualifiedName>,std::allocator<std::pair<const c10::QualifiedName,size_t>>>'에서는 struct 'torch::jit::CompilationUnit'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\compilation_unit.h(319): message : 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<c10::QualifiedName>,std::allocator<std::pair<const c10::QualifiedName,size_t>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\compilation_unit.h(320,60): warning C4251: 'torch::jit::CompilationUnit::classDict_': class 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<c10::QualifiedName>,std::allocator<std::pair<const c10::QualifiedName,size_t>>>'에서는 struct 'torch::jit::CompilationUnit'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\compilation_unit.h(319): message : 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<c10::QualifiedName>,std::allocator<std::pair<const c10::QualifiedName,size_t>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\compilation_unit.h(327,42): warning C4251: 'torch::jit::CompilationUnit::classes_': class 'std::vector<c10::NamedTypePtr,std::allocator<c10::NamedTypePtr>>'에서는 struct 'torch::jit::CompilationUnit'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\compilation_unit.h(327): message : 'std::vector<c10::NamedTypePtr,std::allocator<c10::NamedTypePtr>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<std::string,std::allocator<std::string>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<std::string,std::allocator<std::string>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<std::string,std::allocator<std::string>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<std::vector<std::string,std::allocator<std::string>>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\api\module.h(283): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::vector<std::string,std::allocator<std::string>>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<std::string,std::allocator<std::string>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\serialize\input-archive.h(110,32): warning C4251: 'torch::serialize::InputArchive::hierarchy_prefix_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'torch::serialize::InputArchive'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\serialize\output-archive.h(76,44): warning C4251: 'torch::serialize::OutputArchive::cu_': class 'std::shared_ptr<torch::jit::CompilationUnit>'에서는 class 'torch::serialize::OutputArchive'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue.h(1104): message : 'std::shared_ptr<torch::jit::CompilationUnit>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\variant.h(1589,1): warning C4819: 현재 코드 페이지(949)에서 표시할 수 없는 문자가 파일에 들어 있습니다. 데이터가 손실되지 않게 하려면 해당 파일을 유니코드 형식으로 저장하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\module.h(64,70): warning C4251: 'std::enable_shared_from_this<torch::nn::Module>::_Wptr': class 'std::weak_ptr<_Ty>'에서는 class 'std::enable_shared_from_this<torch::nn::Module>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=torch::nn::Module
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\memory(3238): message : 'std::weak_ptr<_Ty>' 선언을 참조하십시오.
          with
          [
              _Ty=torch::nn::Module
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\module.h(543,47): warning C4251: 'torch::nn::Module::parameters_': class 'torch::OrderedDict<std::string,at::Tensor>'에서는 class 'torch::nn::Module'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\module.h(212): message : 'torch::OrderedDict<std::string,at::Tensor>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\module.h(591,44): warning C4251: 'torch::nn::Module::buffers_': class 'torch::OrderedDict<std::string,at::Tensor>'에서는 class 'torch::nn::Module'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\module.h(212): message : 'torch::OrderedDict<std::string,at::Tensor>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\module.h(594,62): warning C4251: 'torch::nn::Module::children_': class 'torch::OrderedDict<std::string,std::shared_ptr<torch::nn::Module>>'에서는 class 'torch::nn::Module'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\module.h(248): message : 'torch::OrderedDict<std::string,std::shared_ptr<torch::nn::Module>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\module.h(597,38): warning C4251: 'torch::nn::Module::name_': class 'c10::optional<std::string>'에서는 class 'torch::nn::Module'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\List.h(69): message : 'c10::optional<std::string>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\batchnorm.h(24,46): warning C4251: 'torch::nn::BatchNormOptions::momentum_': class 'c10::optional<double>'에서는 struct 'torch::nn::BatchNormOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(842): message : 'c10::optional<double>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\batchnorm.h(81,46): warning C4251: 'torch::nn::functional::BatchNormFuncOptions::momentum_': class 'c10::optional<double>'에서는 struct 'torch::nn::functional::BatchNormFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(842): message : 'c10::optional<double>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(25,50): warning C4251: 'torch::nn::EmbeddingOptions::padding_idx_': class 'c10::optional<int64_t>'에서는 struct 'torch::nn::EmbeddingOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(671): message : 'c10::optional<int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(27,46): warning C4251: 'torch::nn::EmbeddingOptions::max_norm_': class 'c10::optional<double>'에서는 struct 'torch::nn::EmbeddingOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(842): message : 'c10::optional<double>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(46,50): warning C4251: 'torch::nn::EmbeddingFromPretrainedOptions::padding_idx_': class 'c10::optional<int64_t>'에서는 struct 'torch::nn::EmbeddingFromPretrainedOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(671): message : 'c10::optional<int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(48,46): warning C4251: 'torch::nn::EmbeddingFromPretrainedOptions::max_norm_': class 'c10::optional<double>'에서는 struct 'torch::nn::EmbeddingFromPretrainedOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(842): message : 'c10::optional<double>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(70,50): warning C4251: 'torch::nn::functional::EmbeddingFuncOptions::padding_idx_': class 'c10::optional<int64_t>'에서는 struct 'torch::nn::functional::EmbeddingFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(671): message : 'c10::optional<int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(72,46): warning C4251: 'torch::nn::functional::EmbeddingFuncOptions::max_norm_': class 'c10::optional<double>'에서는 struct 'torch::nn::functional::EmbeddingFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(842): message : 'c10::optional<double>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(101,46): warning C4251: 'torch::nn::EmbeddingBagOptions::max_norm_': class 'c10::optional<double>'에서는 struct 'torch::nn::EmbeddingBagOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(842): message : 'c10::optional<double>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(109,37): warning C4251: 'torch::nn::EmbeddingBagOptions::mode_': class 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>'에서는 struct 'torch::nn::EmbeddingBagOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(85): message : 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(128,46): warning C4251: 'torch::nn::EmbeddingBagFromPretrainedOptions::max_norm_': class 'c10::optional<double>'에서는 struct 'torch::nn::EmbeddingBagFromPretrainedOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(842): message : 'c10::optional<double>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(136,37): warning C4251: 'torch::nn::EmbeddingBagFromPretrainedOptions::mode_': class 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>'에서는 struct 'torch::nn::EmbeddingBagFromPretrainedOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(85): message : 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(162,46): warning C4251: 'torch::nn::functional::EmbeddingBagFuncOptions::max_norm_': class 'c10::optional<double>'에서는 struct 'torch::nn::functional::EmbeddingBagFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(842): message : 'c10::optional<double>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(170,37): warning C4251: 'torch::nn::functional::EmbeddingBagFuncOptions::mode_': class 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>'에서는 struct 'torch::nn::functional::EmbeddingBagFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(85): message : 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(43,59): warning C4244: '인수': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(43,48): warning C4244: '인수': 'T'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=double
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(123,59): warning C4244: '인수': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(123,48): warning C4244: '인수': 'T'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=double
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(25,44): warning C4251: 'torch::nn::FoldOptions::output_size_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::FoldOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(28,44): warning C4251: 'torch::nn::FoldOptions::kernel_size_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::FoldOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(32,42): warning C4251: 'torch::nn::FoldOptions::dilation_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::FoldOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(36,41): warning C4251: 'torch::nn::FoldOptions::padding_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::FoldOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(39,40): warning C4251: 'torch::nn::FoldOptions::stride_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::FoldOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(69,44): warning C4251: 'torch::nn::UnfoldOptions::kernel_size_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::UnfoldOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(73,42): warning C4251: 'torch::nn::UnfoldOptions::dilation_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::UnfoldOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(77,41): warning C4251: 'torch::nn::UnfoldOptions::padding_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::UnfoldOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(80,40): warning C4251: 'torch::nn::UnfoldOptions::stride_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::UnfoldOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\activation.h(223,49): warning C4251: 'torch::nn::functional::SoftmaxFuncOptions::dtype_': class 'c10::optional<c10::ScalarType>'에서는 struct 'torch::nn::functional::SoftmaxFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\ScalarTypeToTypeMeta.h(29): message : 'c10::optional<c10::ScalarType>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\activation.h(263,49): warning C4251: 'torch::nn::functional::SoftminFuncOptions::dtype_': class 'c10::optional<c10::ScalarType>'에서는 struct 'torch::nn::functional::SoftminFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\ScalarTypeToTypeMeta.h(29): message : 'c10::optional<c10::ScalarType>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\activation.h(303,49): warning C4251: 'torch::nn::functional::LogSoftmaxFuncOptions::dtype_': class 'c10::optional<c10::ScalarType>'에서는 struct 'torch::nn::functional::LogSoftmaxFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\ScalarTypeToTypeMeta.h(29): message : 'c10::optional<c10::ScalarType>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\linear.h(65,34): warning C4251: 'torch::nn::UnflattenOptions::dimname_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'torch::nn::UnflattenOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\linear.h(67,41): warning C4251: 'torch::nn::UnflattenOptions::sizes_': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 struct 'torch::nn::UnflattenOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\MemoryFormat.h(56): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\linear.h(69,38): warning C4251: 'torch::nn::UnflattenOptions::namedshape_': class 'std::vector<std::pair<std::string,int64_t>,std::allocator<std::pair<std::string,int64_t>>>'에서는 struct 'torch::nn::UnflattenOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\linear.h(56): message : 'std::vector<std::pair<std::string,int64_t>,std::allocator<std::pair<std::string,int64_t>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\activation.h(643,18): warning C4244: '=': 'const T'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\activation.h(665,16): warning C4244: '=': 'const T'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\activation.h(675,26): warning C4244: '=': 'T'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(23,37): warning C4251: 'torch::nn::L1LossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::L1LossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(55,37): warning C4251: 'torch::nn::KLDivLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kBatchMean,torch::enumtype::kSum,torch::enumtype::kMean>'에서는 struct 'torch::nn::KLDivLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(49): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kBatchMean,torch::enumtype::kSum,torch::enumtype::kMean>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(90,37): warning C4251: 'torch::nn::MSELossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::MSELossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(122,37): warning C4251: 'torch::nn::BCELossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::BCELossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(154,37): warning C4251: 'torch::nn::HingeEmbeddingLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::HingeEmbeddingLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(195,37): warning C4251: 'torch::nn::MultiMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::MultiMarginLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(228,37): warning C4251: 'torch::nn::CosineEmbeddingLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::CosineEmbeddingLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(262,37): warning C4251: 'torch::nn::MultiLabelMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::MultiLabelMarginLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(296,37): warning C4251: 'torch::nn::SoftMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::SoftMarginLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(333,37): warning C4251: 'torch::nn::MultiLabelSoftMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::MultiLabelSoftMarginLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(372,37): warning C4251: 'torch::nn::TripletMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::TripletMarginLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(404): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(404,68): warning C4251: 'torch::nn::TripletMarginWithDistanceLossOptions::distance_function_': class 'c10::optional<torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t>'에서는 struct 'torch::nn::TripletMarginWithDistanceLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(404): message : 'c10::optional<torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(417,37): warning C4251: 'torch::nn::TripletMarginWithDistanceLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::TripletMarginWithDistanceLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(448,37): warning C4251: 'torch::nn::CTCLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::CTCLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(486,37): warning C4251: 'torch::nn::SmoothL1LossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::SmoothL1LossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(524,37): warning C4251: 'torch::nn::PoissonNLLLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::PoissonNLLLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(555,37): warning C4251: 'torch::nn::MarginRankingLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::MarginRankingLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(591,37): warning C4251: 'torch::nn::NLLLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::NLLLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(626,37): warning C4251: 'torch::nn::CrossEntropyLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::CrossEntropyLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(657,37): warning C4251: 'torch::nn::BCEWithLogitsLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::BCEWithLogitsLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\normalization.h(20,52): warning C4251: 'torch::nn::LayerNormOptions::normalized_shape_': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 struct 'torch::nn::LayerNormOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\MemoryFormat.h(56): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\normalization.h(43,52): warning C4251: 'torch::nn::functional::LayerNormFuncOptions::normalized_shape_': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 struct 'torch::nn::functional::LayerNormFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\MemoryFormat.h(56): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\normalization.h(133,41): warning C4251: 'torch::nn::functional::NormalizeFuncOptions::out_': class 'c10::optional<at::Tensor>'에서는 struct 'torch::nn::functional::NormalizeFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(631): message : 'c10::optional<at::Tensor>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(22,3): warning C4251: 'torch::nn::ReflectionPadOptions<D>::padding_': class 'torch::ExpandingArray<D*2,int64_t>'에서는 struct 'torch::nn::ReflectionPadOptions<D>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(16): message : 'torch::ExpandingArray<D*2,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(23): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReflectionPadOptions<D>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(54,3): warning C4251: 'torch::nn::ReplicationPadOptions<D>::padding_': class 'torch::ExpandingArray<D*2,int64_t>'에서는 struct 'torch::nn::ReplicationPadOptions<D>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(16): message : 'torch::ExpandingArray<D*2,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(55): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReplicationPadOptions<D>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(95,40): warning C4251: 'torch::nn::ZeroPad2dOptions::padding_': class 'torch::ExpandingArray<4,int64_t>'에서는 struct 'torch::nn::ZeroPad2dOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(90): message : 'torch::ExpandingArray<4,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(111,3): warning C4251: 'torch::nn::ConstantPadOptions<D>::padding_': class 'torch::ExpandingArray<D*2,int64_t>'에서는 struct 'torch::nn::ConstantPadOptions<D>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(16): message : 'torch::ExpandingArray<D*2,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(115): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ConstantPadOptions<D>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(162,39): warning C4251: 'torch::nn::functional::PadFuncOptions::pad_': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 struct 'torch::nn::functional::PadFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\MemoryFormat.h(56): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(165,27): warning C4251: 'torch::nn::functional::PadFuncOptions::mode_': class 'c10::variant<torch::enumtype::kConstant,torch::enumtype::kReflect,torch::enumtype::kReplicate,torch::enumtype::kCircular>'에서는 struct 'torch::nn::functional::PadFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(153): message : 'c10::variant<torch::enumtype::kConstant,torch::enumtype::kReflect,torch::enumtype::kReplicate,torch::enumtype::kCircular>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\padding.h(14,36): warning C4267: '초기화 중': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\pooling.h(963,10): warning C4244: '초기화 중': '_Ty'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              _Ty=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\pooling.h(964,10): warning C4244: '초기화 중': '_Ty'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              _Ty=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(23,56): warning C4251: 'torch::nn::UpsampleOptions::size_': class 'c10::optional<std::vector<int64_t,std::allocator<int64_t>>>'에서는 struct 'torch::nn::UpsampleOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(402): message : 'c10::optional<std::vector<int64_t,std::allocator<int64_t>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<double,std::allocator<double>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<double,std::allocator<double>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<double,std::allocator<double>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<std::vector<double,std::allocator<double>>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(26): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::vector<double,std::allocator<double>>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<double,std::allocator<double>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(26,63): warning C4251: 'torch::nn::UpsampleOptions::scale_factor_': class 'c10::optional<std::vector<double,std::allocator<double>>>'에서는 struct 'torch::nn::UpsampleOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(26): message : 'c10::optional<std::vector<double,std::allocator<double>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(36,27): warning C4251: 'torch::nn::UpsampleOptions::mode_': class 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear>'에서는 struct 'torch::nn::UpsampleOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(30): message : 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(42,49): warning C4251: 'torch::nn::UpsampleOptions::align_corners_': class 'c10::optional<bool>'에서는 struct 'torch::nn::UpsampleOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorOptions.h(40): message : 'c10::optional<bool>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(64,56): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::size_': class 'c10::optional<std::vector<int64_t,std::allocator<int64_t>>>'에서는 struct 'torch::nn::functional::InterpolateFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(402): message : 'c10::optional<std::vector<int64_t,std::allocator<int64_t>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(67,63): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::scale_factor_': class 'c10::optional<std::vector<double,std::allocator<double>>>'에서는 struct 'torch::nn::functional::InterpolateFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(26): message : 'c10::optional<std::vector<double,std::allocator<double>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(71,27): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::mode_': class 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear,torch::enumtype::kArea>'에서는 struct 'torch::nn::functional::InterpolateFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(55): message : 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear,torch::enumtype::kArea>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(82,49): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::align_corners_': class 'c10::optional<bool>'에서는 struct 'torch::nn::functional::InterpolateFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorOptions.h(40): message : 'c10::optional<bool>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(93,58): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::recompute_scale_factor_': class 'c10::optional<bool>'에서는 struct 'torch::nn::functional::InterpolateFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorOptions.h(40): message : 'c10::optional<bool>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\vision.h(24,27): warning C4251: 'torch::nn::functional::GridSampleFuncOptions::mode_': class 'c10::variant<torch::enumtype::kBilinear,torch::enumtype::kNearest>'에서는 struct 'torch::nn::functional::GridSampleFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\vision.h(20): message : 'c10::variant<torch::enumtype::kBilinear,torch::enumtype::kNearest>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\vision.h(26,43): warning C4251: 'torch::nn::functional::GridSampleFuncOptions::padding_mode_': class 'c10::variant<torch::enumtype::kZeros,torch::enumtype::kBorder,torch::enumtype::kReflection>'에서는 struct 'torch::nn::functional::GridSampleFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\vision.h(21): message : 'c10::variant<torch::enumtype::kZeros,torch::enumtype::kBorder,torch::enumtype::kReflection>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\vision.h(28,49): warning C4251: 'torch::nn::functional::GridSampleFuncOptions::align_corners_': class 'c10::optional<bool>'에서는 struct 'torch::nn::functional::GridSampleFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorOptions.h(40): message : 'c10::optional<bool>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\functional.h(94,21): warning C4251: 'torch::nn::FunctionalImpl::function_': class 'std::function<at::Tensor (at::Tensor)>'에서는 class 'torch::nn::FunctionalImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\data\transforms\tensor.h(39): message : 'std::function<at::Tensor (at::Tensor)>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\adaptive.h(26,43): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossOptions::cutoffs_': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 struct 'torch::nn::AdaptiveLogSoftmaxWithLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\MemoryFormat.h(56): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(71,31): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossImpl::cutoffs': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 class 'torch::nn::AdaptiveLogSoftmaxWithLossImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\MemoryFormat.h(56): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(81,15): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossImpl::head': class 'torch::nn::Linear'에서는 class 'torch::nn::AdaptiveLogSoftmaxWithLossImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): message : 'torch::nn::Linear' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(83,18): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossImpl::tail': class 'torch::nn::ModuleList'에서는 class 'torch::nn::AdaptiveLogSoftmaxWithLossImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(253): message : 'torch::nn::ModuleList' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(130,63): warning C4251: 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>::options': struct 'torch::nn::detail::ConvNdOptions<1>'에서는 class 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): message : 'torch::nn::detail::ConvNdOptions<1>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(130,63): warning C4251: 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 class 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\MemoryFormat.h(56): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(162,63): warning C4251: 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>::options': struct 'torch::nn::detail::ConvNdOptions<2>'에서는 class 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): message : 'torch::nn::detail::ConvNdOptions<2>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(162,63): warning C4251: 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 class 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\MemoryFormat.h(56): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(197,63): warning C4251: 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>::options': struct 'torch::nn::detail::ConvNdOptions<3>'에서는 class 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): message : 'torch::nn::detail::ConvNdOptions<3>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(197,63): warning C4251: 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 class 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\MemoryFormat.h(56): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(272,90): warning C4251: 'torch::nn::ConvNdImpl<1,Derived>::options': struct 'torch::nn::detail::ConvNdOptions<1>'에서는 class 'torch::nn::ConvNdImpl<1,Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              Derived=torch::nn::ConvTranspose1dImpl
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): message : 'torch::nn::detail::ConvNdOptions<1>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(272,90): warning C4251: 'torch::nn::ConvNdImpl<1,Derived>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 class 'torch::nn::ConvNdImpl<1,Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              Derived=torch::nn::ConvTranspose1dImpl
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\MemoryFormat.h(56): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(307,90): warning C4251: 'torch::nn::ConvNdImpl<2,Derived>::options': struct 'torch::nn::detail::ConvNdOptions<2>'에서는 class 'torch::nn::ConvNdImpl<2,Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              Derived=torch::nn::ConvTranspose2dImpl
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): message : 'torch::nn::detail::ConvNdOptions<2>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(307,90): warning C4251: 'torch::nn::ConvNdImpl<2,Derived>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 class 'torch::nn::ConvNdImpl<2,Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              Derived=torch::nn::ConvTranspose2dImpl
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\MemoryFormat.h(56): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(342,90): warning C4251: 'torch::nn::ConvNdImpl<3,Derived>::options': struct 'torch::nn::detail::ConvNdOptions<3>'에서는 class 'torch::nn::ConvNdImpl<3,Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              Derived=torch::nn::ConvTranspose3dImpl
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): message : 'torch::nn::detail::ConvNdOptions<3>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(342,90): warning C4251: 'torch::nn::ConvNdImpl<3,Derived>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 class 'torch::nn::ConvNdImpl<3,Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              Derived=torch::nn::ConvTranspose3dImpl
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\MemoryFormat.h(56): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(22,3): warning C4251: 'torch::nn::ReflectionPadOptions<1>::padding_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::ReflectionPadOptions<1>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(28): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReflectionPadOptions<1>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(44): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReflectionPadImpl<1,torch::nn::ReflectionPad1dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(22,3): warning C4251: 'torch::nn::ReflectionPadOptions<2>::padding_': class 'torch::ExpandingArray<4,int64_t>'에서는 struct 'torch::nn::ReflectionPadOptions<2>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(90): message : 'torch::ExpandingArray<4,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(28): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReflectionPadOptions<2>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(69): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReflectionPadImpl<2,torch::nn::ReflectionPad2dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(54,3): warning C4251: 'torch::nn::ReplicationPadOptions<1>::padding_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::ReplicationPadOptions<1>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(99): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReplicationPadOptions<1>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(115): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReplicationPadImpl<1,torch::nn::ReplicationPad1dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(54,3): warning C4251: 'torch::nn::ReplicationPadOptions<2>::padding_': class 'torch::ExpandingArray<4,int64_t>'에서는 struct 'torch::nn::ReplicationPadOptions<2>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(90): message : 'torch::ExpandingArray<4,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(99): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReplicationPadOptions<2>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(140): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReplicationPadImpl<2,torch::nn::ReplicationPad2dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(54,3): warning C4251: 'torch::nn::ReplicationPadOptions<3>::padding_': class 'torch::ExpandingArray<6,int64_t>'에서는 struct 'torch::nn::ReplicationPadOptions<3>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(87): message : 'torch::ExpandingArray<6,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(99): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReplicationPadOptions<3>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(165): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReplicationPadImpl<3,torch::nn::ReplicationPad3dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(111,3): warning C4251: 'torch::nn::ConstantPadOptions<1>::padding_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::ConstantPadOptions<1>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(232): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ConstantPadOptions<1>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(248): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ConstantPadImpl<1,torch::nn::ConstantPad1dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(111,3): warning C4251: 'torch::nn::ConstantPadOptions<2>::padding_': class 'torch::ExpandingArray<4,int64_t>'에서는 struct 'torch::nn::ConstantPadOptions<2>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(90): message : 'torch::ExpandingArray<4,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(232): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ConstantPadOptions<2>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(273): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ConstantPadImpl<2,torch::nn::ConstantPad2dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(111,3): warning C4251: 'torch::nn::ConstantPadOptions<3>::padding_': class 'torch::ExpandingArray<6,int64_t>'에서는 struct 'torch::nn::ConstantPadOptions<3>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(87): message : 'torch::ExpandingArray<6,int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(232): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ConstantPadOptions<3>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(298): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ConstantPadImpl<3,torch::nn::ConstantPad3dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(28,1): warning C4251: 'torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>::options': struct 'torch::nn::AvgPoolOptions<1>'에서는 class 'torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(42): message : 'torch::nn::AvgPoolOptions<1>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(44): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(28,1): warning C4251: 'torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>::options': struct 'torch::nn::AvgPoolOptions<2>'에서는 class 'torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(50): message : 'torch::nn::AvgPoolOptions<2>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(70): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(28,1): warning C4251: 'torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>::options': struct 'torch::nn::AvgPoolOptions<3>'에서는 class 'torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(58): message : 'torch::nn::AvgPoolOptions<3>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(96): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(125,1): warning C4251: 'torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>::options': struct 'torch::nn::MaxPoolOptions<1>'에서는 class 'torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(132): message : 'torch::nn::MaxPoolOptions<1>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(141): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(125,1): warning C4251: 'torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>::options': struct 'torch::nn::MaxPoolOptions<2>'에서는 class 'torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(140): message : 'torch::nn::MaxPoolOptions<2>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(171): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(125,1): warning C4251: 'torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>::options': struct 'torch::nn::MaxPoolOptions<3>'에서는 class 'torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(148): message : 'torch::nn::MaxPoolOptions<3>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(201): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238,1): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<output_size_t>'에서는 class 'torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(227): message : 'torch::nn::AdaptiveMaxPoolOptions<output_size_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(239): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238,1): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArray<1,int64_t>>'에서는 class 'torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(201): message : 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArray<1,int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(255): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238,1): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>'에서는 class 'torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(209): message : 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(287): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238,1): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>'에서는 class 'torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(217): message : 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(319): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357,1): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<output_size_t>'에서는 class 'torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(346): message : 'torch::nn::AdaptiveAvgPoolOptions<output_size_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(358): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357,1): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArray<1,int64_t>>'에서는 class 'torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(270): message : 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArray<1,int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(374): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357,1): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>'에서는 class 'torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(278): message : 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(402): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357,1): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>'에서는 class 'torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(286): message : 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(430): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(460,1): warning C4251: 'torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>::options': struct 'torch::nn::MaxUnpoolOptions<1>'에서는 class 'torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(354): message : 'torch::nn::MaxUnpoolOptions<1>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(476): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(460,1): warning C4251: 'torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>::options': struct 'torch::nn::MaxUnpoolOptions<2>'에서는 class 'torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(362): message : 'torch::nn::MaxUnpoolOptions<2>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(505): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(460,1): warning C4251: 'torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>::options': struct 'torch::nn::MaxUnpoolOptions<3>'에서는 class 'torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(370): message : 'torch::nn::MaxUnpoolOptions<3>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(534): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(581,37): warning C4251: 'torch::nn::FractionalMaxPool2dImpl::options': struct 'torch::nn::FractionalMaxPoolOptions<2>'에서는 class 'torch::nn::FractionalMaxPool2dImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(452): message : 'torch::nn::FractionalMaxPoolOptions<2>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(624,37): warning C4251: 'torch::nn::FractionalMaxPool3dImpl::options': struct 'torch::nn::FractionalMaxPoolOptions<3>'에서는 class 'torch::nn::FractionalMaxPool3dImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(460): message : 'torch::nn::FractionalMaxPoolOptions<3>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(651,1): warning C4251: 'torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>::options': struct 'torch::nn::LPPoolOptions<1>'에서는 class 'torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(510): message : 'torch::nn::LPPoolOptions<1>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(667): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(651,1): warning C4251: 'torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>::options': struct 'torch::nn::LPPoolOptions<2>'에서는 class 'torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(518): message : 'torch::nn::LPPoolOptions<2>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(695): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\rnn.h(23,43): warning C4251: 'torch::nn::detail::RNNOptionsBase::mode_': class 'c10::variant<torch::enumtype::kLSTM,torch::enumtype::kGRU,torch::enumtype::kRNN_TANH,torch::enumtype::kRNN_RELU>'에서는 struct 'torch::nn::detail::RNNOptionsBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\rnn.h(15): message : 'c10::variant<torch::enumtype::kLSTM,torch::enumtype::kGRU,torch::enumtype::kRNN_TANH,torch::enumtype::kRNN_RELU>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\rnn.h(68,43): warning C4251: 'torch::nn::RNNOptions::nonlinearity_': class 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>'에서는 struct 'torch::nn::RNNOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\rnn.h(54): message : 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\rnn.h(183,43): warning C4251: 'torch::nn::RNNCellOptions::nonlinearity_': class 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>'에서는 struct 'torch::nn::RNNCellOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\rnn.h(54): message : 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80,1): warning C4251: 'torch::nn::detail::RNNImplBase<Derived>::flat_weights_names_': class 'std::vector<std::string,std::allocator<std::string>>'에서는 class 'torch::nn::detail::RNNImplBase<Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Exception.h(35): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(83): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::detail::RNNImplBase<Derived>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81,1): warning C4251: 'torch::nn::detail::RNNImplBase<Derived>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>'에서는 class 'torch::nn::detail::RNNImplBase<Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): message : 'std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82,1): warning C4251: 'torch::nn::detail::RNNImplBase<Derived>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<at::Tensor>>'에서는 class 'torch::nn::detail::RNNImplBase<Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(720): message : 'std::vector<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80,1): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::flat_weights_names_': class 'std::vector<std::string,std::allocator<std::string>>'에서는 class 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Exception.h(35): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(99): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81,1): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>'에서는 class 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): message : 'std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82,1): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<at::Tensor>>'에서는 class 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(720): message : 'std::vector<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80,1): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::flat_weights_names_': class 'std::vector<std::string,std::allocator<std::string>>'에서는 class 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Exception.h(35): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(143): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81,1): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>'에서는 class 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): message : 'std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82,1): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<at::Tensor>>'에서는 class 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(720): message : 'std::vector<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::tuple<at::Tensor,at::Tensor>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::tuple<at::Tensor,at::Tensor>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::tuple<at::Tensor,at::Tensor>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<std::tuple<at::Tensor,at::Tensor>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(150): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::tuple<at::Tensor,at::Tensor>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::tuple<at::Tensor,at::Tensor>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80,1): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::flat_weights_names_': class 'std::vector<std::string,std::allocator<std::string>>'에서는 class 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Exception.h(35): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(195): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81,1): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>'에서는 class 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): message : 'std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82,1): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<at::Tensor>>'에서는 class 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(720): message : 'std::vector<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\activation.h(821,19): warning C4251: 'torch::nn::MultiheadAttentionImpl::out_proj': class 'torch::nn::Linear'에서는 class 'torch::nn::MultiheadAttentionImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): message : 'torch::nn::Linear' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\anomaly_mode.h(59,25): warning C4251: 'torch::autograd::AnomalyMetadata::traceback_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'torch::autograd::AnomalyMetadata'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\anomaly_mode.h(60,32): warning C4251: 'torch::autograd::AnomalyMetadata::parent_': class 'std::shared_ptr<torch::autograd::Node>'에서는 struct 'torch::autograd::AnomalyMetadata'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(1373): message : 'std::shared_ptr<torch::autograd::Node>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(319,44): warning C4251: 'torch::autograd::profiler::LegacyEvent::shapes_': class 'std::vector<std::vector<int64_t,std::allocator<int64_t>>,std::allocator<std::vector<int64_t,std::allocator<int64_t>>>>'에서는 struct 'torch::autograd::profiler::LegacyEvent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\WrapDimUtils.h(25): message : 'std::vector<std::vector<int64_t,std::allocator<int64_t>>,std::allocator<std::vector<int64_t,std::allocator<int64_t>>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(323,28): warning C4251: 'torch::autograd::profiler::LegacyEvent::cuda_event': class 'std::shared_ptr<CUevent_st>'에서는 struct 'torch::autograd::profiler::LegacyEvent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(27): message : 'std::shared_ptr<CUevent_st>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(329,34): warning C4251: 'torch::autograd::profiler::LegacyEvent::stack_': class 'std::vector<std::string,std::allocator<std::string>>'에서는 struct 'torch::autograd::profiler::LegacyEvent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Exception.h(35): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(333,59): warning C4251: 'torch::autograd::profiler::LegacyEvent::extra_args_': class 'std::unordered_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,c10::IValue>>>'에서는 struct 'torch::autograd::profiler::LegacyEvent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\function_schema.h(314): message : 'std::unordered_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,c10::IValue>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(146,17): warning C4244: '초기화 중': 'double'에서 'int64_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(191,22): warning C4244: '=': 'double'에서 'int64_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(456,39): warning C4251: 'torch::autograd::profiler::RecordProfile::file_': class 'std::unique_ptr<std::ofstream,std::default_delete<std::ofstream>>'에서는 struct 'torch::autograd::profiler::RecordProfile'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(456): message : 'std::unique_ptr<std::ofstream,std::default_delete<std::ofstream>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::function<void (const torch::autograd::profiler::thread_event_lists &)>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::function<void (const torch::autograd::profiler::thread_event_lists &)>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::function<void (const torch::autograd::profiler::thread_event_lists &)>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(493): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::function<void (const torch::autograd::profiler::thread_event_lists &)>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(493,68): warning C4251: 'torch::autograd::profiler::TLSProfilerGuard::cb_': class 'c10::optional<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>'에서는 struct 'torch::autograd::profiler::TLSProfilerGuard'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(473): message : 'c10::optional<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(494,70): warning C4251: 'torch::autograd::profiler::TLSProfilerGuard::profilerDisableOptions_': class 'c10::optional<torch::autograd::profiler::ProfilerDisableOptions>'에서는 struct 'torch::autograd::profiler::TLSProfilerGuard'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(431): message : 'c10::optional<torch::autograd::profiler::ProfilerDisableOptions>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(498,23): warning C4251: 'torch::autograd::profiler::FileLineFunc::filename': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'torch::autograd::profiler::FileLineFunc'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(500,23): warning C4251: 'torch::autograd::profiler::FileLineFunc::funcname': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'torch::autograd::profiler::FileLineFunc'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(556,26): warning C4251: 'torch::autograd::profiler::ProfilerThreadLocalState::state_mutex_': class 'std::mutex'에서는 struct 'torch::autograd::profiler::ProfilerThreadLocalState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\mutex(87): message : 'std::mutex' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(558,23): warning C4251: 'torch::autograd::profiler::ProfilerThreadLocalState::event_lists_map_': class 'std::unordered_map<uint64_t,std::shared_ptr<torch::autograd::profiler::RangeEventList>,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<std::pair<const uint64_t,std::shared_ptr<torch::autograd::profiler::RangeEventList>>>>'에서는 struct 'torch::autograd::profiler::ProfilerThreadLocalState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(557): message : 'std::unordered_map<uint64_t,std::shared_ptr<torch::autograd::profiler::RangeEventList>,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<std::pair<const uint64_t,std::shared_ptr<torch::autograd::profiler::RangeEventList>>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<std::vector<torch::autograd::profiler::LegacyEvent,std::allocator<torch::autograd::profiler::LegacyEvent>>,std::allocator<std::vector<torch::autograd::profiler::LegacyEvent,std::allocator<torch::autograd::profiler::LegacyEvent>>>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<std::vector<torch::autograd::profiler::LegacyEvent,std::allocator<torch::autograd::profiler::LegacyEvent>>,std::allocator<std::vector<torch::autograd::profiler::LegacyEvent,std::allocator<torch::autograd::profiler::LegacyEvent>>>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<std::vector<torch::autograd::profiler::LegacyEvent,std::allocator<torch::autograd::profiler::LegacyEvent>>,std::allocator<std::vector<torch::autograd::profiler::LegacyEvent,std::allocator<torch::autograd::profiler::LegacyEvent>>>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<std::vector<std::vector<torch::autograd::profiler::LegacyEvent,std::allocator<torch::autograd::profiler::LegacyEvent>>,std::allocator<std::vector<torch::autograd::profiler::LegacyEvent,std::allocator<torch::autograd::profiler::LegacyEvent>>>>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(562): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::vector<std::vector<torch::autograd::profiler::LegacyEvent,std::allocator<torch::autograd::profiler::LegacyEvent>>,std::allocator<std::vector<torch::autograd::profiler::LegacyEvent,std::allocator<torch::autograd::profiler::LegacyEvent>>>>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<std::vector<torch::autograd::profiler::LegacyEvent,std::allocator<torch::autograd::profiler::LegacyEvent>>,std::allocator<std::vector<torch::autograd::profiler::LegacyEvent,std::allocator<torch::autograd::profiler::LegacyEvent>>>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(562,77): warning C4251: 'torch::autograd::profiler::ProfilerThreadLocalState::remoteProfiledEvents_': class 'c10::optional<std::vector<std::vector<torch::autograd::profiler::LegacyEvent,std::allocator<torch::autograd::profiler::LegacyEvent>>,std::allocator<std::vector<torch::autograd::profiler::LegacyEvent,std::allocator<torch::autograd::profiler::LegacyEvent>>>>>'에서는 struct 'torch::autograd::profiler::ProfilerThreadLocalState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\profiler_legacy.h(562): message : 'c10::optional<std::vector<std::vector<torch::autograd::profiler::LegacyEvent,std::allocator<torch::autograd::profiler::LegacyEvent>>,std::allocator<std::vector<torch::autograd::profiler::LegacyEvent,std::allocator<torch::autograd::profiler::LegacyEvent>>>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\saved_variable.h(53,40): warning C4251: 'torch::autograd::SavedVariable::fw_grad_': class 'std::shared_ptr<torch::autograd::ForwardGrad>'에서는 class 'torch::autograd::SavedVariable'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\forward_grad.h(95): message : 'std::shared_ptr<torch::autograd::ForwardGrad>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\saved_variable.h(59,33): warning C4251: 'torch::autograd::SavedVariable::grad_fn_': class 'std::shared_ptr<torch::autograd::Node>'에서는 class 'torch::autograd::SavedVariable'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(1373): message : 'std::shared_ptr<torch::autograd::Node>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\saved_variable.h(62,36): warning C4251: 'torch::autograd::SavedVariable::weak_grad_fn_': class 'std::weak_ptr<torch::autograd::Node>'에서는 class 'torch::autograd::SavedVariable'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(119): message : 'std::weak_ptr<torch::autograd::Node>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\saved_variable.h(63,40): warning C4251: 'torch::autograd::SavedVariable::grad_accumulator_': class 'std::weak_ptr<torch::autograd::Node>'에서는 class 'torch::autograd::SavedVariable'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(119): message : 'std::weak_ptr<torch::autograd::Node>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\function.h(98,60): warning C4251: 'std::enable_shared_from_this<torch::autograd::Node>::_Wptr': class 'std::weak_ptr<torch::autograd::Node>'에서는 class 'std::enable_shared_from_this<torch::autograd::Node>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(119): message : 'std::weak_ptr<torch::autograd::Node>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\function.h(433,20): warning C4251: 'torch::autograd::Node::mutex_': class 'std::mutex'에서는 struct 'torch::autograd::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\mutex(87): message : 'std::mutex' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\function.h(435,24): warning C4251: 'torch::autograd::Node::next_edges_': class 'std::vector<torch::autograd::Edge,std::allocator<torch::autograd::Edge>>'에서는 struct 'torch::autograd::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\function.h(33): message : 'std::vector<torch::autograd::Edge,std::allocator<torch::autograd::Edge>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\function.h(437,54): warning C4251: 'torch::autograd::Node::anomaly_metadata_': class 'std::unique_ptr<torch::autograd::AnomalyMetadata,std::default_delete<torch::autograd::AnomalyMetadata>>'에서는 struct 'torch::autograd::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\function.h(437): message : 'std::unique_ptr<torch::autograd::AnomalyMetadata,std::default_delete<torch::autograd::AnomalyMetadata>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\function.h(438,59): warning C4251: 'torch::autograd::Node::pre_hooks_': class 'std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>'에서는 struct 'torch::autograd::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\function.h(343): message : 'std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\function.h(439,61): warning C4251: 'torch::autograd::Node::post_hooks_': class 'std::vector<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<torch::autograd::FunctionPostHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<torch::autograd::FunctionPostHook>>>>'에서는 struct 'torch::autograd::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\function.h(319): message : 'std::vector<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<torch::autograd::FunctionPostHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<torch::autograd::FunctionPostHook>>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\function.h(440,52): warning C4251: 'torch::autograd::Node::input_metadata_': class 'c10::SmallVector<torch::autograd::InputMetadata,2>'에서는 struct 'torch::autograd::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\function.h(440): message : 'c10::SmallVector<torch::autograd::InputMetadata,2>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\function.h(180,1): warning C4267: '초기화 중': 'size_t'에서 'uint32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\function.h(186,1): warning C4267: '초기화 중': 'size_t'에서 'uint32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\function.h(193,1): warning C4267: '초기화 중': 'size_t'에서 'uint32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\function.h(199,1): warning C4267: 'return': 'size_t'에서 'uint32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\function.h(254,1): warning C4267: 'return': 'size_t'에서 'uint32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\custom_function.h(98,57): warning C4251: 'torch::autograd::AutogradContext::saved_data': class 'ska::flat_hash_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<c10::EnumNameValue>>'에서는 struct 'torch::autograd::AutogradContext'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\custom_function.h(98): message : 'ska::flat_hash_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<c10::EnumNameValue>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\custom_function.h(122,58): warning C4251: 'torch::autograd::AutogradContext::non_differentiable_': class 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<c10::TensorImpl *>,std::allocator<c10::TensorImpl *>>'에서는 struct 'torch::autograd::AutogradContext'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\custom_function.h(13): message : 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<c10::TensorImpl *>,std::allocator<c10::TensorImpl *>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\custom_function.h(123,52): warning C4251: 'torch::autograd::AutogradContext::dirty_inputs_': class 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<c10::TensorImpl *>,std::allocator<c10::TensorImpl *>>'에서는 struct 'torch::autograd::AutogradContext'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\custom_function.h(13): message : 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<c10::TensorImpl *>,std::allocator<c10::TensorImpl *>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\custom_function.h(124,63): warning C4251: 'torch::autograd::AutogradContext::saved_variables_': class 'std::vector<torch::autograd::SavedVariable,std::allocator<torch::autograd::SavedVariable>>'에서는 struct 'torch::autograd::AutogradContext'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\function.h(34): message : 'std::vector<torch::autograd::SavedVariable,std::allocator<torch::autograd::SavedVariable>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\custom_function.h(125,25): warning C4251: 'torch::autograd::AutogradContext::to_save_': class 'std::vector<at::Tensor,std::allocator<at::Tensor>>'에서는 struct 'torch::autograd::AutogradContext'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(720): message : 'std::vector<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\custom_function.h(131,31): warning C4251: 'torch::autograd::AutogradContext::grad_fn_': class 'std::weak_ptr<torch::autograd::Node>'에서는 struct 'torch::autograd::AutogradContext'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\variable.h(119): message : 'std::weak_ptr<torch::autograd::Node>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\autograd\custom_function.h(147,28): warning C4251: 'torch::autograd::VariableInfo::size': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 struct 'torch::autograd::VariableInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\MemoryFormat.h(56): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(36,39): warning C4251: 'torch::nn::TransformerEncoderLayerOptions::activation_': class 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>'에서는 struct 'torch::nn::TransformerEncoderLayerOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(19): message : 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(67,39): warning C4251: 'torch::nn::TransformerDecoderLayerOptions::activation_': class 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>'에서는 struct 'torch::nn::TransformerDecoderLayerOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(19): message : 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(59,34): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::self_attn': class 'torch::nn::MultiheadAttention'에서는 class 'torch::nn::TransformerEncoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\activation.h(833): message : 'torch::nn::MultiheadAttention' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(62,20): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::linear1': class 'torch::nn::Linear'에서는 class 'torch::nn::TransformerEncoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): message : 'torch::nn::Linear' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(65,21): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::dropout': class 'torch::nn::Dropout'에서는 class 'torch::nn::TransformerEncoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): message : 'torch::nn::Dropout' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(68,20): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::linear2': class 'torch::nn::Linear'에서는 class 'torch::nn::TransformerEncoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): message : 'torch::nn::Linear' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(71,21): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::norm1': class 'torch::nn::LayerNorm'에서는 class 'torch::nn::TransformerEncoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): message : 'torch::nn::LayerNorm' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(73,21): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::norm2': class 'torch::nn::LayerNorm'에서는 class 'torch::nn::TransformerEncoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): message : 'torch::nn::LayerNorm' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(76,22): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::dropout1': class 'torch::nn::Dropout'에서는 class 'torch::nn::TransformerEncoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): message : 'torch::nn::Dropout' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(78,22): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::dropout2': class 'torch::nn::Dropout'에서는 class 'torch::nn::TransformerEncoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): message : 'torch::nn::Dropout' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(136,31): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::self_attn': class 'torch::nn::MultiheadAttention'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\activation.h(833): message : 'torch::nn::MultiheadAttention' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(139,19): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout1': class 'torch::nn::Dropout'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): message : 'torch::nn::Dropout' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(142,18): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::norm1': class 'torch::nn::LayerNorm'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): message : 'torch::nn::LayerNorm' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(145,36): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::multihead_attn': class 'torch::nn::MultiheadAttention'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\activation.h(833): message : 'torch::nn::MultiheadAttention' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(148,19): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout2': class 'torch::nn::Dropout'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): message : 'torch::nn::Dropout' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(151,18): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::norm2': class 'torch::nn::LayerNorm'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): message : 'torch::nn::LayerNorm' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(154,17): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::linear1': class 'torch::nn::Linear'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): message : 'torch::nn::Linear' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(157,18): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout': class 'torch::nn::Dropout'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): message : 'torch::nn::Dropout' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(160,17): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::linear2': class 'torch::nn::Linear'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): message : 'torch::nn::Linear' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(163,19): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout3': class 'torch::nn::Dropout'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): message : 'torch::nn::Dropout' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(166,18): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::norm3': class 'torch::nn::LayerNorm'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): message : 'torch::nn::LayerNorm' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(28,55): warning C4251: 'torch::nn::TransformerEncoderOptions::encoder_layer_': class 'torch::nn::TransformerEncoderLayer'에서는 struct 'torch::nn::TransformerEncoderOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(87): message : 'torch::nn::TransformerEncoderLayer' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(34,31): warning C4251: 'torch::nn::TransformerEncoderOptions::norm_': class 'torch::nn::AnyModule'에서는 struct 'torch::nn::TransformerEncoderOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): message : 'torch::nn::AnyModule' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(57,53): warning C4251: 'torch::nn::TransformerDecoderOptions::decoder_layer_': class 'torch::nn::TransformerDecoderLayer'에서는 struct 'torch::nn::TransformerDecoderOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(185): message : 'torch::nn::TransformerDecoderLayer' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(63,29): warning C4251: 'torch::nn::TransformerDecoderOptions::norm_': class 'torch::nn::AnyModule'에서는 struct 'torch::nn::TransformerDecoderOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): message : 'torch::nn::AnyModule' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(58,23): warning C4251: 'torch::nn::TransformerEncoderImpl::layers': class 'torch::nn::ModuleList'에서는 class 'torch::nn::TransformerEncoderImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(253): message : 'torch::nn::ModuleList' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(61,19): warning C4251: 'torch::nn::TransformerEncoderImpl::norm': class 'torch::nn::AnyModule'에서는 class 'torch::nn::TransformerEncoderImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): message : 'torch::nn::AnyModule' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(120,22): warning C4251: 'torch::nn::TransformerDecoderImpl::layers': class 'torch::nn::ModuleList'에서는 class 'torch::nn::TransformerDecoderImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(253): message : 'torch::nn::ModuleList' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(123,19): warning C4251: 'torch::nn::TransformerDecoderImpl::norm': class 'torch::nn::AnyModule'에서는 class 'torch::nn::TransformerDecoderImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): message : 'torch::nn::AnyModule' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\transformer.h(50,39): warning C4251: 'torch::nn::TransformerOptions::activation_': class 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>'에서는 struct 'torch::nn::TransformerOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(19): message : 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\transformer.h(53,39): warning C4251: 'torch::nn::TransformerOptions::custom_encoder_': class 'torch::nn::AnyModule'에서는 struct 'torch::nn::TransformerOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): message : 'torch::nn::AnyModule' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\options\transformer.h(56,39): warning C4251: 'torch::nn::TransformerOptions::custom_decoder_': class 'torch::nn::AnyModule'에서는 struct 'torch::nn::TransformerOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): message : 'torch::nn::AnyModule' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformer.h(125,22): warning C4251: 'torch::nn::TransformerImpl::encoder': class 'torch::nn::AnyModule'에서는 class 'torch::nn::TransformerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): message : 'torch::nn::AnyModule' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformer.h(128,22): warning C4251: 'torch::nn::TransformerImpl::decoder': class 'torch::nn::AnyModule'에서는 class 'torch::nn::TransformerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): message : 'torch::nn::AnyModule' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(80,30): warning C4251: 'torch::optim::OptimizerParamGroup::params_': class 'std::vector<at::Tensor,std::allocator<at::Tensor>>'에서는 class 'torch::optim::OptimizerParamGroup'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(720): message : 'std::vector<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(81,45): warning C4251: 'torch::optim::OptimizerParamGroup::options_': class 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<torch::optim::OptimizerOptions>>'에서는 class 'torch::optim::OptimizerParamGroup'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(51): message : 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<torch::optim::OptimizerOptions>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(147,50): warning C4251: 'torch::optim::Optimizer::param_groups_': class 'std::vector<torch::optim::OptimizerParamGroup,std::allocator<torch::optim::OptimizerParamGroup>>'에서는 class 'torch::optim::Optimizer'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(91): message : 'std::vector<torch::optim::OptimizerParamGroup,std::allocator<torch::optim::OptimizerParamGroup>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(148,80): warning C4251: 'torch::optim::Optimizer::state_': class 'ska::flat_hash_map<std::string,std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<K,V>>>'에서는 class 'torch::optim::Optimizer'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              K=std::string,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(135): message : 'ska::flat_hash_map<std::string,std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<K,V>>>' 선언을 참조하십시오.
          with
          [
              K=std::string,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(149,47): warning C4251: 'torch::optim::Optimizer::defaults_': class 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<torch::optim::OptimizerOptions>>'에서는 class 'torch::optim::Optimizer'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(51): message : 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<torch::optim::OptimizerOptions>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\adam.h(25,29): warning C4251: 'torch::optim::AdamOptions::betas_': class 'std::tuple<double,double>'에서는 struct 'torch::optim::AdamOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\adam.h(24): message : 'std::tuple<double,double>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\adamw.h(25,29): warning C4251: 'torch::optim::AdamWOptions::betas_': class 'std::tuple<double,double>'에서는 struct 'torch::optim::AdamWOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\adam.h(24): message : 'std::tuple<double,double>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(21,47): warning C4251: 'torch::optim::LBFGSOptions::max_eval_': class 'c10::optional<int64_t>'에서는 struct 'torch::optim::LBFGSOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(671): message : 'c10::optional<int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(25,57): warning C4251: 'torch::optim::LBFGSOptions::line_search_fn_': class 'c10::optional<std::string>'에서는 struct 'torch::optim::LBFGSOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\List.h(69): message : 'c10::optional<std::string>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(41,42): warning C4251: 'torch::optim::LBFGSParamState::old_dirs_': class 'std::deque<at::Tensor,std::allocator<at::Tensor>>'에서는 struct 'torch::optim::LBFGSParamState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): message : 'std::deque<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(42,42): warning C4251: 'torch::optim::LBFGSParamState::old_stps_': class 'std::deque<at::Tensor,std::allocator<at::Tensor>>'에서는 struct 'torch::optim::LBFGSParamState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): message : 'std::deque<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(43,36): warning C4251: 'torch::optim::LBFGSParamState::ro_': class 'std::deque<at::Tensor,std::allocator<at::Tensor>>'에서는 struct 'torch::optim::LBFGSParamState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): message : 'std::deque<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<at::Tensor,std::allocator<at::Tensor>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<at::Tensor,std::allocator<at::Tensor>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<at::Tensor,std::allocator<at::Tensor>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<std::vector<at::Tensor,std::allocator<at::Tensor>>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(44): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::vector<at::Tensor,std::allocator<at::Tensor>>>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<at::Tensor,std::allocator<at::Tensor>>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(44,53): warning C4251: 'torch::optim::LBFGSParamState::al_': class 'c10::optional<std::vector<at::Tensor,std::allocator<at::Tensor>>>'에서는 struct 'torch::optim::LBFGSParamState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(44): message : 'c10::optional<std::vector<at::Tensor,std::allocator<at::Tensor>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(74,38): warning C4251: 'torch::optim::LBFGS::_numel_cache': class 'c10::optional<int64_t>'에서는 class 'torch::optim::LBFGS'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(671): message : 'c10::optional<int64_t>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(181,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::Operator
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(361): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::Operator
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::Operator
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(418): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<torch::jit::Operator>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\runtime\custom_operator.h(23): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<torch::jit::Operator>'에 대한 참조를 확인하세요.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(387,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::Operator
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\caffe2\serialize\inline_container.h(119,38): warning C4251: 'caffe2::serialize::PyTorchStreamReader::ar_': class 'std::unique_ptr<mz_zip_archive,std::default_delete<mz_zip_archive>>'에서는 class 'caffe2::serialize::PyTorchStreamReader'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\caffe2\serialize\inline_container.h(119): message : 'std::unique_ptr<mz_zip_archive,std::default_delete<mz_zip_archive>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\caffe2\serialize\inline_container.h(120,28): warning C4251: 'caffe2::serialize::PyTorchStreamReader::archive_name_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'caffe2::serialize::PyTorchStreamReader'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\caffe2\serialize\inline_container.h(121,39): warning C4251: 'caffe2::serialize::PyTorchStreamReader::archive_name_plus_slash_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'caffe2::serialize::PyTorchStreamReader'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\caffe2\serialize\inline_container.h(122,44): warning C4251: 'caffe2::serialize::PyTorchStreamReader::in_': class 'std::shared_ptr<caffe2::serialize::ReadAdapterInterface>'에서는 class 'caffe2::serialize::PyTorchStreamReader'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\caffe2\serialize\inline_container.h(98): message : 'std::shared_ptr<caffe2::serialize::ReadAdapterInterface>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\caffe2\serialize\inline_container.h(155,38): warning C4251: 'caffe2::serialize::PyTorchStreamWriter::ar_': class 'std::unique_ptr<mz_zip_archive,std::default_delete<mz_zip_archive>>'에서는 class 'caffe2::serialize::PyTorchStreamWriter'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\caffe2\serialize\inline_container.h(119): message : 'std::unique_ptr<mz_zip_archive,std::default_delete<mz_zip_archive>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\caffe2\serialize\inline_container.h(156,28): warning C4251: 'caffe2::serialize::PyTorchStreamWriter::archive_name_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'caffe2::serialize::PyTorchStreamWriter'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\caffe2\serialize\inline_container.h(157,39): warning C4251: 'caffe2::serialize::PyTorchStreamWriter::archive_name_plus_slash_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'caffe2::serialize::PyTorchStreamWriter'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\caffe2\serialize\inline_container.h(158,23): warning C4251: 'caffe2::serialize::PyTorchStreamWriter::padding_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'caffe2::serialize::PyTorchStreamWriter'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(4648): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\caffe2\serialize\inline_container.h(159,29): warning C4251: 'caffe2::serialize::PyTorchStreamWriter::file_stream_': class 'std::basic_ofstream<char,std::char_traits<char>>'에서는 class 'caffe2::serialize::PyTorchStreamWriter'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\iosfwd(225): message : 'std::basic_ofstream<char,std::char_traits<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\caffe2\serialize\inline_container.h(160,58): warning C4251: 'caffe2::serialize::PyTorchStreamWriter::writer_func_': class 'std::function<size_t (const void *,size_t)>'에서는 class 'caffe2::serialize::PyTorchStreamWriter'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\serialize\output-archive.h(65): message : 'std::function<size_t (const void *,size_t)>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\pickler.h(227,51): warning C4251: 'torch::jit::Pickler::writer_': class 'std::function<void (const char *,size_t)>'에서는 class 'torch::jit::Pickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\pickler.h(123): message : 'std::function<void (const char *,size_t)>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\pickler.h(234,27): warning C4251: 'torch::jit::Pickler::stack_': class 'std::vector<char,std::allocator<char>>'에서는 class 'torch::jit::Pickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\api\include\torch\serialize.h(76): message : 'std::vector<char,std::allocator<char>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\pickler.h(246,65): warning C4251: 'torch::jit::Pickler::memoized_ivalue_map_': class 'std::unordered_map<const void *,uint32_t,std::hash<const void *>,std::equal_to<const void *>,std::allocator<std::pair<const void *const ,uint32_t>>>'에서는 class 'torch::jit::Pickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\pickler.h(246): message : 'std::unordered_map<const void *,uint32_t,std::hash<const void *>,std::equal_to<const void *>,std::allocator<std::pair<const void *const ,uint32_t>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\pickler.h(252,40): warning C4251: 'torch::jit::Pickler::memoized_ivalues_': class 'std::vector<c10::IValue,std::allocator<c10::IValue>>'에서는 class 'torch::jit::Pickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\List.h(24): message : 'std::vector<c10::IValue,std::allocator<c10::IValue>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\pickler.h(254,76): warning C4251: 'torch::jit::Pickler::type_renamer_': class 'std::function<c10::QualifiedName (const c10::ClassTypePtr &)>'에서는 class 'torch::jit::Pickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\pickler.h(129): message : 'std::function<c10::QualifiedName (const c10::ClassTypePtr &)>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\pickler.h(261,39): warning C4251: 'torch::jit::Pickler::tensor_data_': class 'std::vector<at::Tensor,std::allocator<at::Tensor>>'에서는 class 'torch::jit::Pickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\TensorBody.h(720): message : 'std::vector<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\pickler.h(262,66): warning C4251: 'torch::jit::Pickler::memoized_storage_map_': class 'std::unordered_map<const void *,uint32_t,std::hash<const void *>,std::equal_to<const void *>,std::allocator<std::pair<const void *const ,uint32_t>>>'에서는 class 'torch::jit::Pickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\pickler.h(246): message : 'std::unordered_map<const void *,uint32_t,std::hash<const void *>,std::equal_to<const void *>,std::allocator<std::pair<const void *const ,uint32_t>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\pickler.h(264,66): warning C4251: 'torch::jit::Pickler::memoized_globals_map_': class 'std::unordered_map<std::string,uint32_t,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,uint32_t>>>'에서는 class 'torch::jit::Pickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\pickler.h(264): message : 'std::unordered_map<std::string,uint32_t,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,uint32_t>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\pickler.h(265,66): warning C4251: 'torch::jit::Pickler::memoized_strings_map_': class 'std::unordered_map<std::string,uint32_t,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,uint32_t>>>'에서는 class 'torch::jit::Pickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\pickler.h(264): message : 'std::unordered_map<std::string,uint32_t,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,uint32_t>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\pickler.h(266,66): warning C4251: 'torch::jit::Pickler::memoized_devices_map_': class 'std::unordered_map<std::string,uint32_t,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,uint32_t>>>'에서는 class 'torch::jit::Pickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\pickler.h(264): message : 'std::unordered_map<std::string,uint32_t,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,uint32_t>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\unpickler.h(117,47): warning C4251: 'torch::jit::Unpickler::reader_': class 'std::function<size_t (char *,size_t)>'에서는 class 'torch::jit::Unpickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\unpickler.h(31): message : 'std::function<size_t (char *,size_t)>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\unpickler.h(123,29): warning C4251: 'torch::jit::Unpickler::stack_': class 'std::vector<c10::IValue,std::allocator<c10::IValue>>'에서는 class 'torch::jit::Unpickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\List.h(24): message : 'std::vector<c10::IValue,std::allocator<c10::IValue>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\unpickler.h(127,50): warning C4251: 'torch::jit::Unpickler::globals_': class 'std::vector<std::function<void (void)>,std::allocator<std::function<void (void)>>>'에서는 class 'torch::jit::Unpickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\ivalue_inl.h(567): message : 'std::vector<std::function<void (void)>,std::allocator<std::function<void (void)>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\unpickler.h(128,34): warning C4251: 'torch::jit::Unpickler::memo_table_': class 'std::vector<c10::IValue,std::allocator<c10::IValue>>'에서는 class 'torch::jit::Unpickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\List.h(24): message : 'std::vector<c10::IValue,std::allocator<c10::IValue>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\unpickler.h(129,29): warning C4251: 'torch::jit::Unpickler::marks_': class 'std::vector<T,std::allocator<T>>'에서는 class 'torch::jit::Unpickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              T=size_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\ArrayRef.h(219): message : 'std::vector<T,std::allocator<T>>' 선언을 참조하십시오.
          with
          [
              T=size_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\unpickler.h(136,60): warning C4251: 'torch::jit::Unpickler::type_cache_': class 'std::unordered_map<std::string,c10::TypePtr,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,c10::TypePtr>>>'에서는 class 'torch::jit::Unpickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\jit_type.h(1798): message : 'std::unordered_map<std::string,c10::TypePtr,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,c10::TypePtr>>>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\unpickler.h(139,30): warning C4251: 'torch::jit::Unpickler::type_resolver_': class 'std::function<c10::StrongTypePtr (const c10::QualifiedName &)>'에서는 class 'torch::jit::Unpickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\unpickler.h(12): message : 'std::function<c10::StrongTypePtr (const c10::QualifiedName &)>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\unpickler.h(140,24): warning C4251: 'torch::jit::Unpickler::obj_loader_': class 'std::function<c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>> (c10::StrongTypePtr,c10::IValue)>'에서는 class 'torch::jit::Unpickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              TTarget=c10::ivalue::Object
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\unpickler.h(14): message : 'std::function<c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>> (c10::StrongTypePtr,c10::IValue)>' 선언을 참조하십시오.
          with
          [
              TTarget=c10::ivalue::Object
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\unpickler.h(143,62): warning C4251: 'torch::jit::Unpickler::read_record_': class 'std::function<c10::DataPtr (const std::string &)>'에서는 class 'torch::jit::Unpickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\unpickler.h(46): message : 'std::function<c10::DataPtr (const std::string &)>' 선언을 참조하십시오.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\torch\csrc\jit\serialization\unpickler.h(144,36): warning C4251: 'torch::jit::Unpickler::device_': class 'c10::optional<c10::Device>'에서는 class 'torch::jit::Unpickler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorOptions.h(22): message : 'c10::optional<c10::Device>' 선언을 참조하십시오.
D:\matlab\ReinforcementLearning\cpp\Source\PyTorchTest\PyTorchTest\main.cpp(17,27): warning C4101: 'e' :참조되지 않은 지역 변수입니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(530,1): warning C4267: '인수': 'size_t'에서 'T'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=int32_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\function_schema.h(268): message : 컴파일되는 함수 템플릿 인스턴스화 'c10::optional<int32_t>::optional<size_t,false>(U &&)'에 대한 참조를 확인하세요.
          with
          [
              U=size_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\ATen\core\function_schema.h(268): message : 컴파일되는 함수 템플릿 인스턴스화 'c10::optional<int32_t>::optional<size_t,false>(U &&)'에 대한 참조를 확인하세요.
          with
          [
              U=size_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(39,62): warning C4244: '인수': 'src_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              src_t=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(37): message : 클래스 템플릿 멤버 함수 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'을(를) 컴파일하는 중입니다.
          with
          [
              dest_t=c10::BFloat16,
              From=int64_t,
              src_t=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(157): message : 컴파일되는 함수 템플릿 인스턴스화 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'에 대한 참조를 확인하세요.
          with
          [
              dest_t=c10::BFloat16,
              From=int64_t,
              src_t=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(157): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::static_cast_with_inter_type<To,From>'에 대한 참조를 확인하세요.
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(169): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::convert<To,From>(From)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\Scalar.h(63): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::checked_convert<c10::BFloat16,int64_t>(From,const char *)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(39,62): warning C4244: '인수': 'T'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=double
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(37): message : 클래스 템플릿 멤버 함수 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'을(를) 컴파일하는 중입니다.
          with
          [
              dest_t=c10::BFloat16,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(157): message : 컴파일되는 함수 템플릿 인스턴스화 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'에 대한 참조를 확인하세요.
          with
          [
              dest_t=c10::BFloat16,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(157): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::static_cast_with_inter_type<To,From>'에 대한 참조를 확인하세요.
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(169): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::convert<To,From>(From)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\Scalar.h(63): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::checked_convert<c10::BFloat16,c10::complex<double>>(From,const char *)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(39,62): warning C4244: '인수': 'src_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              src_t=double
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(37): message : 클래스 템플릿 멤버 함수 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'을(를) 컴파일하는 중입니다.
          with
          [
              dest_t=c10::BFloat16,
              From=double,
              src_t=double
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(157): message : 컴파일되는 함수 템플릿 인스턴스화 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'에 대한 참조를 확인하세요.
          with
          [
              dest_t=c10::BFloat16,
              From=double,
              src_t=double
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(157): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::static_cast_with_inter_type<To,From>'에 대한 참조를 확인하세요.
          with
          [
              To=c10::BFloat16,
              From=double
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(169): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::convert<To,From>(From)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::BFloat16,
              From=double
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\Scalar.h(63): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::checked_convert<c10::BFloat16,double>(From,const char *)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::BFloat16,
              From=double
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(39,62): warning C4244: '인수': 'src_t'에서 'const T'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              src_t=int64_t
          ]
          and
          [
              T=double
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(37): message : 클래스 템플릿 멤버 함수 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'을(를) 컴파일하는 중입니다.
          with
          [
              dest_t=c10::complex<double>,
              From=int64_t,
              src_t=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(157): message : 컴파일되는 함수 템플릿 인스턴스화 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'에 대한 참조를 확인하세요.
          with
          [
              dest_t=c10::complex<double>,
              From=int64_t,
              src_t=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(157): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::static_cast_with_inter_type<To,From>'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(169): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::convert<To,From>(From)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\Scalar.h(63): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::checked_convert<c10::complex<double>,int64_t>(From,const char *)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(39,62): warning C4244: '인수': 'src_t'에서 'const T'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              src_t=int64_t
          ]
          and
          [
              T=float
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(37): message : 클래스 템플릿 멤버 함수 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'을(를) 컴파일하는 중입니다.
          with
          [
              dest_t=c10::complex<float>,
              From=int64_t,
              src_t=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(157): message : 컴파일되는 함수 템플릿 인스턴스화 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'에 대한 참조를 확인하세요.
          with
          [
              dest_t=c10::complex<float>,
              From=int64_t,
              src_t=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(157): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::static_cast_with_inter_type<To,From>'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(169): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::convert<To,From>(From)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\Scalar.h(63): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::checked_convert<c10::complex<float>,int64_t>(From,const char *)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(39,62): warning C4244: '인수': 'src_t'에서 'const T'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              src_t=double
          ]
          and
          [
              T=float
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(37): message : 클래스 템플릿 멤버 함수 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'을(를) 컴파일하는 중입니다.
          with
          [
              dest_t=c10::complex<float>,
              From=double,
              src_t=double
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(157): message : 컴파일되는 함수 템플릿 인스턴스화 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'에 대한 참조를 확인하세요.
          with
          [
              dest_t=c10::complex<float>,
              From=double,
              src_t=double
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(157): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::static_cast_with_inter_type<To,From>'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<float>,
              From=double
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(169): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::convert<To,From>(From)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<float>,
              From=double
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\Scalar.h(63): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::checked_convert<c10::complex<float>,double>(From,const char *)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<float>,
              From=double
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\complex.h(147,10): warning C4244: '초기화 중': 'const T'에서 'T'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=double
          ]
          and
          [
              T=float
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(39): message : 컴파일되는 함수 템플릿 인스턴스화 'c10::complex<float>::complex<T>(const c10::complex<double> &)'에 대한 참조를 확인하세요.
          with
          [
              T=float
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(39): message : 컴파일되는 함수 템플릿 인스턴스화 'c10::complex<float>::complex<T>(const c10::complex<double> &)'에 대한 참조를 확인하세요.
          with
          [
              T=float
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(37): message : 클래스 템플릿 멤버 함수 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'을(를) 컴파일하는 중입니다.
          with
          [
              dest_t=c10::complex<float>,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(157): message : 컴파일되는 함수 템플릿 인스턴스화 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'에 대한 참조를 확인하세요.
          with
          [
              dest_t=c10::complex<float>,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(157): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::static_cast_with_inter_type<To,From>'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<float>,
              From=c10::complex<double>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\TypeCast.h(169): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::convert<To,From>(From)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<float>,
              From=c10::complex<double>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\Scalar.h(63): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::checked_convert<c10::complex<float>,c10::complex<double>>(From,const char *)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<float>,
              From=c10::complex<double>
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\complex.h(147,30): warning C4244: '초기화 중': 'const T'에서 'T'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=double
          ]
          and
          [
              T=float
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(178,39): warning C4244: '인수': 'int16_t'에서 'c10::DeviceIndex'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(374): message : 컴파일되는 함수 템플릿 인스턴스화 'c10::constexpr_storage_t<T>::constexpr_storage_t<c10::DeviceType,int16_t&>(c10::DeviceType &&,int16_t &)'에 대한 참조를 확인하세요.
          with
          [
              T=c10::Device
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(374): message : 컴파일되는 함수 템플릿 인스턴스화 'c10::constexpr_storage_t<T>::constexpr_storage_t<c10::DeviceType,int16_t&>(c10::DeviceType &&,int16_t &)'에 대한 참조를 확인하세요.
          with
          [
              T=c10::Device
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(546): message : 컴파일되는 함수 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>::trivially_copyable_optimization_optional_base<c10::DeviceType,int16_t&>(c10::in_place_t,c10::DeviceType &&,int16_t &)'에 대한 참조를 확인하세요.
          with
          [
              T=c10::Device
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\util\Optional.h(546): message : 컴파일되는 함수 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>::trivially_copyable_optimization_optional_base<c10::DeviceType,int16_t&>(c10::in_place_t,c10::DeviceType &&,int16_t &)'에 대한 참조를 확인하세요.
          with
          [
              T=c10::Device
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorOptions.h(193): message : 컴파일되는 함수 템플릿 인스턴스화 'c10::optional<c10::Device>::optional<_Ty,int16_t&>(c10::in_place_t,_Ty &&,int16_t &)'에 대한 참조를 확인하세요.
          with
          [
              _Ty=c10::DeviceType
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorOptions.h(193): message : 컴파일되는 함수 템플릿 인스턴스화 'c10::optional<c10::Device>::optional<_Ty,int16_t&>(c10::in_place_t,_Ty &&,int16_t &)'에 대한 참조를 확인하세요.
          with
          [
              _Ty=c10::DeviceType
          ]
D:\PyTorchCppAPI\libtorch-win-shared-with-deps-debug-1.8.1+cu111\libtorch\include\c10\core\TensorOptions.h(202): message : 컴파일되는 함수 템플릿 인스턴스화 'c10::TensorOptions c10::TensorOptions::device<c10::DeviceType,int16_t&>(c10::DeviceType &&,int16_t &) noexcept const'에 대한 참조를 확인하세요.
  PyTorchTest.vcxproj -> D:\matlab\ReinforcementLearning\cpp\Source\PyTorchTest\x64\Debug\PyTorchTest.exe
